R:
(__TEXT,__text) section
_main:
00000001000006b0	pushq	%rbp
00000001000006b1	movq	%rsp, %rbp
00000001000006b4	subq	$0x1b0, %rsp            ## imm = 0x1B0
00000001000006bb	movq	0x396e(%rip), %rax
00000001000006c2	movq	(%rax), %rax
00000001000006c5	movq	%rax, -0x8(%rbp)
00000001000006c9	movl	$0x0, -0xac(%rbp)
00000001000006d3	leaq	-0xd8(%rbp), %rdi
00000001000006da	callq	0x100000a00
00000001000006df	leaq	0x370a(%rip), %rsi
00000001000006e6	movl	$0x14, %eax
00000001000006eb	leaq	-0x58(%rbp), %rcx
00000001000006ef	movq	%rcx, -0x180(%rbp)
00000001000006f6	movq	%rax, %rcx
00000001000006f9	movq	-0x180(%rbp), %rdi
0000000100000700	rep		movsl	(%rsi), %es:(%rdi)
0000000100000702	movq	-0x180(%rbp), %rcx
0000000100000709	movq	%rcx, -0x100(%rbp)
0000000100000710	movq	$0x14, -0xf8(%rbp)
000000010000071b	movq	-0x100(%rbp), %rsi
0000000100000722	movq	-0xf8(%rbp), %rdx
0000000100000729	leaq	-0xf0(%rbp), %rdi
0000000100000730	movq	%rax, -0x188(%rbp)
0000000100000737	callq	0x100000a20
000000010000073c	leaq	0x36fd(%rip), %rsi
0000000100000743	leaq	-0xa8(%rbp), %rax
000000010000074a	movq	-0x188(%rbp), %rcx
0000000100000751	movq	%rax, %rdi
0000000100000754	rep		movsl	(%rsi), %es:(%rdi)
0000000100000756	movq	%rax, -0x128(%rbp)
000000010000075d	movq	$0x14, -0x120(%rbp)
0000000100000768	movq	-0x128(%rbp), %rsi
000000010000076f	movq	-0x120(%rbp), %rdx
0000000100000776	leaq	-0x118(%rbp), %rdi
000000010000077d	callq	0x100000a20
0000000100000782	jmp	0x100000787
0000000100000787	leaq	-0xd8(%rbp), %rdi
000000010000078e	movl	$0x37, %esi
0000000100000793	callq	0x100003af4
0000000100000798	movb	%al, -0x189(%rbp)
000000010000079e	jmp	0x1000007a3
00000001000007a3	movb	-0x189(%rbp), %al
00000001000007a9	movzbl	%al, %ecx
00000001000007ac	andl	$0x1, %ecx
00000001000007af	movq	0x3852(%rip), %rdi
00000001000007b6	movl	%ecx, %esi
00000001000007b8	callq	0x100003b7e
00000001000007bd	movq	%rax, -0x198(%rbp)
00000001000007c4	jmp	0x1000007c9
00000001000007c9	leaq	0x36c0(%rip), %rsi
00000001000007d0	movq	-0x198(%rbp), %rdi
00000001000007d7	callq	0x100003bb4
00000001000007dc	jmp	0x1000007e1
00000001000007e1	leaq	-0xf0(%rbp), %rax
00000001000007e8	movq	%rax, -0x140(%rbp)
00000001000007ef	movq	-0x140(%rbp), %rdi
00000001000007f6	callq	0x100000ad0
00000001000007fb	movq	%rax, -0x148(%rbp)
0000000100000802	movq	-0x140(%rbp), %rdi
0000000100000809	callq	0x100000b00
000000010000080e	movq	%rax, -0x150(%rbp)
0000000100000815	leaq	-0x148(%rbp), %rdi
000000010000081c	leaq	-0x150(%rbp), %rsi
0000000100000823	callq	0x100000b30
0000000100000828	testb	$0x1, %al
000000010000082a	jne	0x100000835
0000000100000830	jmp	0x1000008a6
0000000100000835	leaq	-0x148(%rbp), %rdi
000000010000083c	callq	0x100000b60
0000000100000841	movl	(%rax), %ecx
0000000100000843	movl	%ecx, -0x154(%rbp)
0000000100000849	movl	-0x154(%rbp), %esi
000000010000084f	leaq	-0xd8(%rbp), %rdi
0000000100000856	callq	0x100003b06
000000010000085b	jmp	0x100000860
0000000100000860	jmp	0x100000865
0000000100000865	leaq	-0x148(%rbp), %rdi
000000010000086c	callq	0x100000bd0
0000000100000871	jmp	0x100000815
0000000100000876	movq	%rax, -0x130(%rbp)
000000010000087d	movl	%edx, -0x134(%rbp)
0000000100000883	jmp	0x1000009df
0000000100000888	movq	%rax, -0x130(%rbp)
000000010000088f	movl	%edx, -0x134(%rbp)
0000000100000895	leaq	-0x118(%rbp), %rdi
000000010000089c	callq	0x100000c40
00000001000008a1	jmp	0x1000009df
00000001000008a6	leaq	-0xd8(%rbp), %rdi
00000001000008ad	movl	$0x37, %esi
00000001000008b2	callq	0x100003af4
00000001000008b7	movb	%al, -0x199(%rbp)
00000001000008bd	jmp	0x1000008c2
00000001000008c2	movb	-0x199(%rbp), %al
00000001000008c8	movzbl	%al, %ecx
00000001000008cb	andl	$0x1, %ecx
00000001000008ce	movq	0x3733(%rip), %rdi
00000001000008d5	movl	%ecx, %esi
00000001000008d7	callq	0x100003b7e
00000001000008dc	movq	%rax, -0x1a8(%rbp)
00000001000008e3	jmp	0x1000008e8
00000001000008e8	leaq	0x35a1(%rip), %rsi
00000001000008ef	movq	-0x1a8(%rbp), %rdi
00000001000008f6	callq	0x100003bb4
00000001000008fb	jmp	0x100000900
0000000100000900	leaq	-0x118(%rbp), %rax
0000000100000907	movq	%rax, -0x160(%rbp)
000000010000090e	movq	-0x160(%rbp), %rdi
0000000100000915	callq	0x100000ad0
000000010000091a	movq	%rax, -0x168(%rbp)
0000000100000921	movq	-0x160(%rbp), %rdi
0000000100000928	callq	0x100000b00
000000010000092d	movq	%rax, -0x170(%rbp)
0000000100000934	leaq	-0x168(%rbp), %rdi
000000010000093b	leaq	-0x170(%rbp), %rsi
0000000100000942	callq	0x100000b30
0000000100000947	testb	$0x1, %al
0000000100000949	jne	0x100000954
000000010000094f	jmp	0x100000995
0000000100000954	leaq	-0x168(%rbp), %rdi
000000010000095b	callq	0x100000b60
0000000100000960	movl	(%rax), %ecx
0000000100000962	movl	%ecx, -0x174(%rbp)
0000000100000968	movl	-0x174(%rbp), %esi
000000010000096e	leaq	-0xd8(%rbp), %rdi
0000000100000975	callq	0x100003b18
000000010000097a	jmp	0x10000097f
000000010000097f	jmp	0x100000984
0000000100000984	leaq	-0x168(%rbp), %rdi
000000010000098b	callq	0x100000bd0
0000000100000990	jmp	0x100000934
0000000100000995	leaq	-0x118(%rbp), %rdi
000000010000099c	callq	0x100000c40
00000001000009a1	leaq	-0xf0(%rbp), %rdi
00000001000009a8	callq	0x100000c40
00000001000009ad	movl	-0xac(%rbp), %eax
00000001000009b3	movq	0x3676(%rip), %rcx
00000001000009ba	movq	(%rcx), %rcx
00000001000009bd	movq	-0x8(%rbp), %rdx
00000001000009c1	cmpq	%rdx, %rcx
00000001000009c4	movl	%eax, -0x1ac(%rbp)
00000001000009ca	jne	0x1000009f9
00000001000009d0	movl	-0x1ac(%rbp), %eax
00000001000009d6	addq	$0x1b0, %rsp            ## imm = 0x1B0
00000001000009dd	popq	%rbp
00000001000009de	retq
00000001000009df	leaq	-0xf0(%rbp), %rdi
00000001000009e6	callq	0x100000c40
00000001000009eb	movq	-0x130(%rbp), %rdi
00000001000009f2	callq	0x100003aca
00000001000009f7	ud2
00000001000009f9	callq	0x100003bea
00000001000009fe	ud2
__ZN2ft3RBTIiNSt3__14lessIiEENS1_9allocatorINS_12RedBlackTreeIiEEEEEC1Ev:
0000000100000a00	pushq	%rbp
0000000100000a01	movq	%rsp, %rbp
0000000100000a04	subq	$0x10, %rsp
0000000100000a08	movq	%rdi, -0x8(%rbp)
0000000100000a0c	movq	-0x8(%rbp), %rdi
0000000100000a10	callq	0x100000c60
0000000100000a15	addq	$0x10, %rsp
0000000100000a19	popq	%rbp
0000000100000a1a	retq
0000000100000a1b	nopl	(%rax,%rax)
__ZNSt3__16vectorIiNS_9allocatorIiEEEC1ESt16initializer_listIiE:
0000000100000a20	pushq	%rbp
0000000100000a21	movq	%rsp, %rbp
0000000100000a24	subq	$0x20, %rsp
0000000100000a28	movq	%rsi, -0x10(%rbp)
0000000100000a2c	movq	%rdx, -0x8(%rbp)
0000000100000a30	movq	%rdi, -0x18(%rbp)
0000000100000a34	movq	-0x18(%rbp), %rdi
0000000100000a38	movq	-0x10(%rbp), %rsi
0000000100000a3c	movq	-0x8(%rbp), %rdx
0000000100000a40	callq	0x100000cd0
0000000100000a45	addq	$0x20, %rsp
0000000100000a49	popq	%rbp
0000000100000a4a	retq
0000000100000a4b	nopl	(%rax,%rax)
__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc:
0000000100000a50	pushq	%rbp
0000000100000a51	movq	%rsp, %rbp
0000000100000a54	subq	$0x20, %rsp
0000000100000a58	movq	%rdi, -0x8(%rbp)
0000000100000a5c	movq	%rsi, -0x10(%rbp)
0000000100000a60	movq	-0x8(%rbp), %rdi
0000000100000a64	movq	-0x10(%rbp), %rsi
0000000100000a68	movq	-0x10(%rbp), %rax
0000000100000a6c	movq	%rdi, -0x18(%rbp)
0000000100000a70	movq	%rax, %rdi
0000000100000a73	movq	%rsi, -0x20(%rbp)
0000000100000a77	callq	0x100003b60
0000000100000a7c	movq	-0x18(%rbp), %rdi
0000000100000a80	movq	-0x20(%rbp), %rsi
0000000100000a84	movq	%rax, %rdx
0000000100000a87	callq	0x100003b90
0000000100000a8c	addq	$0x20, %rsp
0000000100000a90	popq	%rbp
0000000100000a91	retq
0000000100000a92	nopw	%cs:(%rax,%rax)
0000000100000a9c	nopl	(%rax)
__ZN2ft3RBTIiNSt3__14lessIiEENS1_9allocatorINS_12RedBlackTreeIiEEEEE4findEi:
0000000100000aa0	pushq	%rbp
0000000100000aa1	movq	%rsp, %rbp
0000000100000aa4	subq	$0x10, %rsp
0000000100000aa8	movq	%rdi, -0x8(%rbp)
0000000100000aac	movl	%esi, -0xc(%rbp)
0000000100000aaf	movq	-0x8(%rbp), %rax
0000000100000ab3	movq	0x8(%rax), %rsi
0000000100000ab7	movl	-0xc(%rbp), %edx
0000000100000aba	movq	%rax, %rdi
0000000100000abd	callq	0x100003ad6
0000000100000ac2	andb	$0x1, %al
0000000100000ac4	movzbl	%al, %eax
0000000100000ac7	addq	$0x10, %rsp
0000000100000acb	popq	%rbp
0000000100000acc	retq
0000000100000acd	nopl	(%rax)
__ZNSt3__16vectorIiNS_9allocatorIiEEE5beginEv:
0000000100000ad0	pushq	%rbp
0000000100000ad1	movq	%rsp, %rbp
0000000100000ad4	subq	$0x10, %rsp
0000000100000ad8	movq	%rdi, -0x10(%rbp)
0000000100000adc	movq	-0x10(%rbp), %rax
0000000100000ae0	movq	(%rax), %rsi
0000000100000ae3	movq	%rax, %rdi
0000000100000ae6	callq	0x100002750
0000000100000aeb	movq	%rax, -0x8(%rbp)
0000000100000aef	movq	-0x8(%rbp), %rax
0000000100000af3	addq	$0x10, %rsp
0000000100000af7	popq	%rbp
0000000100000af8	retq
0000000100000af9	nopl	(%rax)
__ZNSt3__16vectorIiNS_9allocatorIiEEE3endEv:
0000000100000b00	pushq	%rbp
0000000100000b01	movq	%rsp, %rbp
0000000100000b04	subq	$0x10, %rsp
0000000100000b08	movq	%rdi, -0x10(%rbp)
0000000100000b0c	movq	-0x10(%rbp), %rax
0000000100000b10	movq	0x8(%rax), %rsi
0000000100000b14	movq	%rax, %rdi
0000000100000b17	callq	0x100002750
0000000100000b1c	movq	%rax, -0x8(%rbp)
0000000100000b20	movq	-0x8(%rbp), %rax
0000000100000b24	addq	$0x10, %rsp
0000000100000b28	popq	%rbp
0000000100000b29	retq
0000000100000b2a	nopw	(%rax,%rax)
__ZNSt3__1neIPiEEbRKNS_11__wrap_iterIT_EES6_:
0000000100000b30	pushq	%rbp
0000000100000b31	movq	%rsp, %rbp
0000000100000b34	subq	$0x10, %rsp
0000000100000b38	movq	%rdi, -0x8(%rbp)
0000000100000b3c	movq	%rsi, -0x10(%rbp)
0000000100000b40	movq	-0x8(%rbp), %rdi
0000000100000b44	movq	-0x10(%rbp), %rsi
0000000100000b48	callq	0x1000027d0
0000000100000b4d	xorb	$-0x1, %al
0000000100000b4f	andb	$0x1, %al
0000000100000b51	movzbl	%al, %eax
0000000100000b54	addq	$0x10, %rsp
0000000100000b58	popq	%rbp
0000000100000b59	retq
0000000100000b5a	nopw	(%rax,%rax)
__ZNKSt3__111__wrap_iterIPiEdeEv:
0000000100000b60	pushq	%rbp
0000000100000b61	movq	%rsp, %rbp
0000000100000b64	movq	%rdi, -0x8(%rbp)
0000000100000b68	movq	-0x8(%rbp), %rax
0000000100000b6c	movq	(%rax), %rax
0000000100000b6f	popq	%rbp
0000000100000b70	retq
0000000100000b71	nopw	%cs:(%rax,%rax)
0000000100000b7b	nopl	(%rax,%rax)
__ZN2ft3RBTIiNSt3__14lessIiEENS1_9allocatorINS_12RedBlackTreeIiEEEEE6insertEi:
0000000100000b80	pushq	%rbp
0000000100000b81	movq	%rsp, %rbp
0000000100000b84	subq	$0x20, %rsp
0000000100000b88	movq	%rdi, -0x8(%rbp)
0000000100000b8c	movl	%esi, -0xc(%rbp)
0000000100000b8f	movq	-0x8(%rbp), %rax
0000000100000b93	movq	%rax, %rcx
0000000100000b96	addq	$0x8, %rcx
0000000100000b9d	movl	-0xc(%rbp), %esi
0000000100000ba0	movq	%rax, %rdi
0000000100000ba3	movq	%rax, -0x18(%rbp)
0000000100000ba7	movq	%rcx, -0x20(%rbp)
0000000100000bab	callq	0x100003b1e
0000000100000bb0	movq	-0x18(%rbp), %rdi
0000000100000bb4	movq	-0x20(%rbp), %rsi
0000000100000bb8	movq	%rax, %rdx
0000000100000bbb	movl	$0x1, %ecx
0000000100000bc0	callq	0x100003b00
0000000100000bc5	addq	$0x20, %rsp
0000000100000bc9	popq	%rbp
0000000100000bca	retq
0000000100000bcb	nopl	(%rax,%rax)
__ZNSt3__111__wrap_iterIPiEppEv:
0000000100000bd0	pushq	%rbp
0000000100000bd1	movq	%rsp, %rbp
0000000100000bd4	movq	%rdi, -0x8(%rbp)
0000000100000bd8	movq	-0x8(%rbp), %rax
0000000100000bdc	movq	(%rax), %rcx
0000000100000bdf	addq	$0x4, %rcx
0000000100000be6	movq	%rcx, (%rax)
0000000100000be9	popq	%rbp
0000000100000bea	retq
0000000100000beb	nopl	(%rax,%rax)
__ZN2ft3RBTIiNSt3__14lessIiEENS1_9allocatorINS_12RedBlackTreeIiEEEEE6removeEi:
0000000100000bf0	pushq	%rbp
0000000100000bf1	movq	%rsp, %rbp
0000000100000bf4	subq	$0x20, %rsp
0000000100000bf8	movq	%rdi, -0x8(%rbp)
0000000100000bfc	movl	%esi, -0xc(%rbp)
0000000100000bff	movq	-0x8(%rbp), %rax
0000000100000c03	cmpq	$0x0, 0x8(%rax)
0000000100000c08	movq	%rax, -0x18(%rbp)
0000000100000c0c	jne	0x100000c17
0000000100000c12	jmp	0x100000c30
0000000100000c17	movq	-0x18(%rbp), %rax
0000000100000c1b	addq	$0x8, %rax
0000000100000c21	movl	-0xc(%rbp), %edx
0000000100000c24	movq	-0x18(%rbp), %rdi
0000000100000c28	movq	%rax, %rsi
0000000100000c2b	callq	0x100003b12
0000000100000c30	addq	$0x20, %rsp
0000000100000c34	popq	%rbp
0000000100000c35	retq
0000000100000c36	nopw	%cs:(%rax,%rax)
__ZNSt3__16vectorIiNS_9allocatorIiEEED1Ev:
0000000100000c40	pushq	%rbp
0000000100000c41	movq	%rsp, %rbp
0000000100000c44	subq	$0x10, %rsp
0000000100000c48	movq	%rdi, -0x8(%rbp)
0000000100000c4c	movq	-0x8(%rbp), %rdi
0000000100000c50	callq	0x100001a90
0000000100000c55	addq	$0x10, %rsp
0000000100000c59	popq	%rbp
0000000100000c5a	retq
0000000100000c5b	nopl	(%rax,%rax)
__ZN2ft3RBTIiNSt3__14lessIiEENS1_9allocatorINS_12RedBlackTreeIiEEEEEC2Ev:
0000000100000c60	pushq	%rbp
0000000100000c61	movq	%rsp, %rbp
0000000100000c64	subq	$0x10, %rsp
0000000100000c68	movq	%rdi, -0x8(%rbp)
0000000100000c6c	movq	-0x8(%rbp), %rax
0000000100000c70	movq	%rax, %rdi
0000000100000c73	movq	%rax, -0x10(%rbp)
0000000100000c77	callq	0x100000ca0
0000000100000c7c	movq	-0x10(%rbp), %rax
0000000100000c80	movq	$0x0, 0x8(%rax)
0000000100000c88	movq	$0x0, 0x18(%rax)
0000000100000c90	addq	$0x10, %rsp
0000000100000c94	popq	%rbp
0000000100000c95	retq
0000000100000c96	nopw	%cs:(%rax,%rax)
__ZNSt3__19allocatorIN2ft12RedBlackTreeIiEEEC1Ev:
0000000100000ca0	pushq	%rbp
0000000100000ca1	movq	%rsp, %rbp
0000000100000ca4	subq	$0x10, %rsp
0000000100000ca8	movq	%rdi, -0x8(%rbp)
0000000100000cac	movq	-0x8(%rbp), %rdi
0000000100000cb0	callq	0x100000cc0
0000000100000cb5	addq	$0x10, %rsp
0000000100000cb9	popq	%rbp
0000000100000cba	retq
0000000100000cbb	nopl	(%rax,%rax)
__ZNSt3__19allocatorIN2ft12RedBlackTreeIiEEEC2Ev:
0000000100000cc0	pushq	%rbp
0000000100000cc1	movq	%rsp, %rbp
0000000100000cc4	movq	%rdi, -0x8(%rbp)
0000000100000cc8	popq	%rbp
0000000100000cc9	retq
0000000100000cca	nopw	(%rax,%rax)
__ZNSt3__16vectorIiNS_9allocatorIiEEEC2ESt16initializer_listIiE:
0000000100000cd0	pushq	%rbp
0000000100000cd1	movq	%rsp, %rbp
0000000100000cd4	subq	$0x50, %rsp
0000000100000cd8	movq	%rsi, -0x10(%rbp)
0000000100000cdc	movq	%rdx, -0x8(%rbp)
0000000100000ce0	movq	%rdi, -0x18(%rbp)
0000000100000ce4	movq	-0x18(%rbp), %rax
0000000100000ce8	movq	%rax, %rcx
0000000100000ceb	movq	%rcx, %rdi
0000000100000cee	movq	%rax, -0x30(%rbp)
0000000100000cf2	callq	0x100000da0
0000000100000cf7	leaq	-0x10(%rbp), %rdi
0000000100000cfb	callq	0x100000e10
0000000100000d00	cmpq	$0x0, %rax
0000000100000d04	jbe	0x100000d84
0000000100000d0a	leaq	-0x10(%rbp), %rdi
0000000100000d0e	callq	0x100000e10
0000000100000d13	movq	-0x30(%rbp), %rdi
0000000100000d17	movq	%rax, %rsi
0000000100000d1a	callq	0x100003b9c
0000000100000d1f	jmp	0x100000d24
0000000100000d24	leaq	-0x10(%rbp), %rax
0000000100000d28	movq	%rax, %rdi
0000000100000d2b	movq	%rax, -0x38(%rbp)
0000000100000d2f	callq	0x100000f50
0000000100000d34	movq	-0x38(%rbp), %rdi
0000000100000d38	movq	%rax, -0x40(%rbp)
0000000100000d3c	callq	0x100000f70
0000000100000d41	movq	-0x38(%rbp), %rdi
0000000100000d45	movq	%rax, -0x48(%rbp)
0000000100000d49	callq	0x100000e10
0000000100000d4e	movq	-0x30(%rbp), %rdi
0000000100000d52	movq	-0x40(%rbp), %rsi
0000000100000d56	movq	-0x48(%rbp), %rdx
0000000100000d5a	movq	%rax, %rcx
0000000100000d5d	callq	0x100003ba2
0000000100000d62	jmp	0x100000d67
0000000100000d67	jmp	0x100000d84
0000000100000d6c	movq	%rax, -0x20(%rbp)
0000000100000d70	movl	%edx, -0x24(%rbp)
0000000100000d73	movq	-0x30(%rbp), %rax
0000000100000d77	movq	%rax, %rdi
0000000100000d7a	callq	0x100000f90
0000000100000d7f	jmp	0x100000d8a
0000000100000d84	addq	$0x50, %rsp
0000000100000d88	popq	%rbp
0000000100000d89	retq
0000000100000d8a	movq	-0x20(%rbp), %rdi
0000000100000d8e	callq	0x100003aca
0000000100000d93	ud2
0000000100000d95	nopw	%cs:(%rax,%rax)
0000000100000d9f	nop
__ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2Ev:
0000000100000da0	pushq	%rbp
0000000100000da1	movq	%rsp, %rbp
0000000100000da4	subq	$0x30, %rsp
0000000100000da8	movq	%rdi, -0x8(%rbp)
0000000100000dac	movq	-0x8(%rbp), %rax
0000000100000db0	movq	%rax, %rdi
0000000100000db3	movq	%rax, -0x20(%rbp)
0000000100000db7	callq	0x100000ff0
0000000100000dbc	jmp	0x100000dc1
0000000100000dc1	movq	-0x20(%rbp), %rax
0000000100000dc5	movq	$0x0, (%rax)
0000000100000dcc	movq	$0x0, 0x8(%rax)
0000000100000dd4	addq	$0x10, %rax
0000000100000dd8	movq	$0x0, -0x10(%rbp)
0000000100000de0	leaq	-0x10(%rbp), %rsi
0000000100000de4	leaq	-0x18(%rbp), %rdx
0000000100000de8	movq	%rax, %rdi
0000000100000deb	callq	0x100001010
0000000100000df0	jmp	0x100000df5
0000000100000df5	addq	$0x30, %rsp
0000000100000df9	popq	%rbp
0000000100000dfa	retq
0000000100000dfb	movq	%rax, %rdi
0000000100000dfe	movq	%rdx, -0x28(%rbp)
0000000100000e02	callq	0x100001000
0000000100000e07	nopw	(%rax,%rax)
__ZNKSt16initializer_listIiE4sizeEv:
0000000100000e10	pushq	%rbp
0000000100000e11	movq	%rsp, %rbp
0000000100000e14	movq	%rdi, -0x8(%rbp)
0000000100000e18	movq	-0x8(%rbp), %rax
0000000100000e1c	movq	0x8(%rax), %rax
0000000100000e20	popq	%rbp
0000000100000e21	retq
0000000100000e22	nopw	%cs:(%rax,%rax)
0000000100000e2c	nopl	(%rax)
__ZNSt3__16vectorIiNS_9allocatorIiEEE11__vallocateEm:
0000000100000e30	pushq	%rbp
0000000100000e31	movq	%rsp, %rbp
0000000100000e34	subq	$0x30, %rsp
0000000100000e38	movq	%rdi, -0x8(%rbp)
0000000100000e3c	movq	%rsi, -0x10(%rbp)
0000000100000e40	movq	-0x8(%rbp), %rax
0000000100000e44	movq	-0x10(%rbp), %rcx
0000000100000e48	movq	%rax, %rdi
0000000100000e4b	movq	%rax, -0x18(%rbp)
0000000100000e4f	movq	%rcx, -0x20(%rbp)
0000000100000e53	callq	0x100003b42
0000000100000e58	movq	-0x20(%rbp), %rcx
0000000100000e5c	cmpq	%rax, %rcx
0000000100000e5f	jbe	0x100000e6e
0000000100000e65	movq	-0x18(%rbp), %rdi
0000000100000e69	callq	0x100003b36
0000000100000e6e	movq	-0x18(%rbp), %rax
0000000100000e72	movq	%rax, %rdi
0000000100000e75	callq	0x1000011c0
0000000100000e7a	movq	-0x10(%rbp), %rsi
0000000100000e7e	movq	%rax, %rdi
0000000100000e81	callq	0x100001190
0000000100000e86	movq	-0x18(%rbp), %rcx
0000000100000e8a	movq	%rax, 0x8(%rcx)
0000000100000e8e	movq	%rax, (%rcx)
0000000100000e91	movq	(%rcx), %rax
0000000100000e94	movq	-0x10(%rbp), %rdx
0000000100000e98	shlq	$0x2, %rdx
0000000100000e9c	addq	%rdx, %rax
0000000100000e9f	movq	%rcx, %rdi
0000000100000ea2	movq	%rax, -0x28(%rbp)
0000000100000ea6	callq	0x1000011f0
0000000100000eab	xorl	%r8d, %r8d
0000000100000eae	movl	%r8d, %esi
0000000100000eb1	movq	-0x28(%rbp), %rcx
0000000100000eb5	movq	%rcx, (%rax)
0000000100000eb8	movq	-0x18(%rbp), %rdi
0000000100000ebc	callq	0x100001220
0000000100000ec1	addq	$0x30, %rsp
0000000100000ec5	popq	%rbp
0000000100000ec6	retq
0000000100000ec7	nopw	(%rax,%rax)
__ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPKiEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_m:
0000000100000ed0	pushq	%rbp
0000000100000ed1	movq	%rsp, %rbp
0000000100000ed4	subq	$0x50, %rsp
0000000100000ed8	movq	%rdi, -0x8(%rbp)
0000000100000edc	movq	%rsi, -0x10(%rbp)
0000000100000ee0	movq	%rdx, -0x18(%rbp)
0000000100000ee4	movq	%rcx, -0x20(%rbp)
0000000100000ee8	movq	-0x8(%rbp), %rax
0000000100000eec	movq	-0x20(%rbp), %rdx
0000000100000ef0	leaq	-0x38(%rbp), %rdi
0000000100000ef4	movq	%rax, %rsi
0000000100000ef7	movq	%rax, -0x50(%rbp)
0000000100000efb	callq	0x100001720
0000000100000f00	movq	-0x50(%rbp), %rdi
0000000100000f04	callq	0x1000011c0
0000000100000f09	movq	-0x10(%rbp), %rsi
0000000100000f0d	movq	-0x18(%rbp), %rdx
0000000100000f11	leaq	-0x30(%rbp), %rcx
0000000100000f15	movq	%rax, %rdi
0000000100000f18	callq	0x100001750
0000000100000f1d	jmp	0x100000f22
0000000100000f22	leaq	-0x38(%rbp), %rdi
0000000100000f26	callq	0x1000017c0
0000000100000f2b	addq	$0x50, %rsp
0000000100000f2f	popq	%rbp
0000000100000f30	retq
0000000100000f31	movq	%rax, -0x40(%rbp)
0000000100000f35	movl	%edx, -0x44(%rbp)
0000000100000f38	leaq	-0x38(%rbp), %rdi
0000000100000f3c	callq	0x1000017c0
0000000100000f41	movq	-0x40(%rbp), %rdi
0000000100000f45	callq	0x100003aca
0000000100000f4a	ud2
0000000100000f4c	nopl	(%rax)
__ZNKSt16initializer_listIiE5beginEv:
0000000100000f50	pushq	%rbp
0000000100000f51	movq	%rsp, %rbp
0000000100000f54	movq	%rdi, -0x8(%rbp)
0000000100000f58	movq	-0x8(%rbp), %rax
0000000100000f5c	movq	(%rax), %rax
0000000100000f5f	popq	%rbp
0000000100000f60	retq
0000000100000f61	nopw	%cs:(%rax,%rax)
0000000100000f6b	nopl	(%rax,%rax)
__ZNKSt16initializer_listIiE3endEv:
0000000100000f70	pushq	%rbp
0000000100000f71	movq	%rsp, %rbp
0000000100000f74	movq	%rdi, -0x8(%rbp)
0000000100000f78	movq	-0x8(%rbp), %rax
0000000100000f7c	movq	(%rax), %rcx
0000000100000f7f	movq	0x8(%rax), %rax
0000000100000f83	shlq	$0x2, %rax
0000000100000f87	addq	%rax, %rcx
0000000100000f8a	movq	%rcx, %rax
0000000100000f8d	popq	%rbp
0000000100000f8e	retq
0000000100000f8f	nop
__ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev:
0000000100000f90	pushq	%rbp
0000000100000f91	movq	%rsp, %rbp
0000000100000f94	subq	$0x20, %rsp
0000000100000f98	movq	%rdi, -0x8(%rbp)
0000000100000f9c	movq	-0x8(%rbp), %rax
0000000100000fa0	cmpq	$0x0, (%rax)
0000000100000fa4	movq	%rax, -0x10(%rbp)
0000000100000fa8	je	0x100000fe7
0000000100000fae	movq	-0x10(%rbp), %rdi
0000000100000fb2	callq	0x100001840
0000000100000fb7	movq	-0x10(%rbp), %rdi
0000000100000fbb	callq	0x1000011c0
0000000100000fc0	movq	-0x10(%rbp), %rcx
0000000100000fc4	movq	(%rcx), %rsi
0000000100000fc7	movq	%rcx, %rdi
0000000100000fca	movq	%rax, -0x18(%rbp)
0000000100000fce	movq	%rsi, -0x20(%rbp)
0000000100000fd2	callq	0x100001680
0000000100000fd7	movq	-0x18(%rbp), %rdi
0000000100000fdb	movq	-0x20(%rbp), %rsi
0000000100000fdf	movq	%rax, %rdx
0000000100000fe2	callq	0x100001870
0000000100000fe7	addq	$0x20, %rsp
0000000100000feb	popq	%rbp
0000000100000fec	retq
0000000100000fed	nopl	(%rax)
__ZNSt3__120__vector_base_commonILb1EEC2Ev:
0000000100000ff0	pushq	%rbp
0000000100000ff1	movq	%rsp, %rbp
0000000100000ff4	movq	%rdi, -0x8(%rbp)
0000000100000ff8	popq	%rbp
0000000100000ff9	retq
0000000100000ffa	nopw	(%rax,%rax)
___clang_call_terminate:
0000000100001000	pushq	%rax
0000000100001001	callq	0x100003bd2
0000000100001006	movq	%rax, (%rsp)
000000010000100a	callq	0x100003bba
000000010000100f	nop
__ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEEC1IDnNS_18__default_init_tagEEEOT_OT0_:
0000000100001010	pushq	%rbp
0000000100001011	movq	%rsp, %rbp
0000000100001014	subq	$0x20, %rsp
0000000100001018	movq	%rdi, -0x8(%rbp)
000000010000101c	movq	%rsi, -0x10(%rbp)
0000000100001020	movq	%rdx, -0x18(%rbp)
0000000100001024	movq	-0x8(%rbp), %rdi
0000000100001028	movq	-0x10(%rbp), %rsi
000000010000102c	movq	-0x18(%rbp), %rdx
0000000100001030	callq	0x100001040
0000000100001035	addq	$0x20, %rsp
0000000100001039	popq	%rbp
000000010000103a	retq
000000010000103b	nopl	(%rax,%rax)
__ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEEC2IDnNS_18__default_init_tagEEEOT_OT0_:
0000000100001040	pushq	%rbp
0000000100001041	movq	%rsp, %rbp
0000000100001044	subq	$0x40, %rsp
0000000100001048	movq	%rdi, -0x8(%rbp)
000000010000104c	movq	%rsi, -0x10(%rbp)
0000000100001050	movq	%rdx, -0x18(%rbp)
0000000100001054	movq	-0x8(%rbp), %rax
0000000100001058	movq	%rax, %rcx
000000010000105b	movq	-0x10(%rbp), %rdi
000000010000105f	movq	%rax, -0x28(%rbp)
0000000100001063	movq	%rcx, -0x30(%rbp)
0000000100001067	callq	0x1000010a0
000000010000106c	movq	-0x30(%rbp), %rdi
0000000100001070	movq	%rax, %rsi
0000000100001073	callq	0x1000010b0
0000000100001078	movq	-0x28(%rbp), %rax
000000010000107c	movq	-0x18(%rbp), %rdi
0000000100001080	movq	%rax, -0x38(%rbp)
0000000100001084	callq	0x1000010f0
0000000100001089	movq	-0x38(%rbp), %rdi
000000010000108d	movq	%rax, -0x40(%rbp)
0000000100001091	callq	0x100001100
0000000100001096	addq	$0x40, %rsp
000000010000109a	popq	%rbp
000000010000109b	retq
000000010000109c	nopl	(%rax)
__ZNSt3__1L7forwardIDnEEOT_RNS_16remove_referenceIS1_E4typeE:
00000001000010a0	pushq	%rbp
00000001000010a1	movq	%rsp, %rbp
00000001000010a4	movq	%rdi, -0x8(%rbp)
00000001000010a8	movq	-0x8(%rbp), %rax
00000001000010ac	popq	%rbp
00000001000010ad	retq
00000001000010ae	nop
__ZNSt3__122__compressed_pair_elemIPiLi0ELb0EEC2IDnvEEOT_:
00000001000010b0	pushq	%rbp
00000001000010b1	movq	%rsp, %rbp
00000001000010b4	subq	$0x20, %rsp
00000001000010b8	movq	%rdi, -0x8(%rbp)
00000001000010bc	movq	%rsi, -0x10(%rbp)
00000001000010c0	movq	-0x8(%rbp), %rax
00000001000010c4	movq	-0x10(%rbp), %rdi
00000001000010c8	movq	%rax, -0x18(%rbp)
00000001000010cc	callq	0x1000010a0
00000001000010d1	movq	-0x18(%rbp), %rcx
00000001000010d5	movq	$0x0, (%rcx)
00000001000010dc	addq	$0x20, %rsp
00000001000010e0	popq	%rbp
00000001000010e1	retq
00000001000010e2	nopw	%cs:(%rax,%rax)
00000001000010ec	nopl	(%rax)
__ZNSt3__1L7forwardINS_18__default_init_tagEEEOT_RNS_16remove_referenceIS2_E4typeE:
00000001000010f0	pushq	%rbp
00000001000010f1	movq	%rsp, %rbp
00000001000010f4	movq	%rdi, -0x8(%rbp)
00000001000010f8	movq	-0x8(%rbp), %rax
00000001000010fc	popq	%rbp
00000001000010fd	retq
00000001000010fe	nop
__ZNSt3__122__compressed_pair_elemINS_9allocatorIiEELi1ELb1EEC2ENS_18__default_init_tagE:
0000000100001100	pushq	%rbp
0000000100001101	movq	%rsp, %rbp
0000000100001104	subq	$0x10, %rsp
0000000100001108	movq	%rdi, -0x10(%rbp)
000000010000110c	movq	-0x10(%rbp), %rax
0000000100001110	movq	%rax, %rdi
0000000100001113	callq	0x100001120
0000000100001118	addq	$0x10, %rsp
000000010000111c	popq	%rbp
000000010000111d	retq
000000010000111e	nop
__ZNSt3__19allocatorIiEC2Ev:
0000000100001120	pushq	%rbp
0000000100001121	movq	%rsp, %rbp
0000000100001124	movq	%rdi, -0x8(%rbp)
0000000100001128	popq	%rbp
0000000100001129	retq
000000010000112a	nopw	(%rax,%rax)
__ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv:
0000000100001130	pushq	%rbp
0000000100001131	movq	%rsp, %rbp
0000000100001134	subq	$0x30, %rsp
0000000100001138	movq	%rdi, -0x8(%rbp)
000000010000113c	movq	-0x8(%rbp), %rdi
0000000100001140	callq	0x100001310
0000000100001145	movq	%rax, %rdi
0000000100001148	callq	0x1000012f0
000000010000114d	movq	%rax, -0x10(%rbp)
0000000100001151	callq	0x100001340
0000000100001156	movq	%rax, -0x18(%rbp)
000000010000115a	leaq	-0x10(%rbp), %rdi
000000010000115e	leaq	-0x18(%rbp), %rsi
0000000100001162	callq	0x1000012c0
0000000100001167	movq	%rax, -0x20(%rbp)
000000010000116b	jmp	0x100001170
0000000100001170	movq	-0x20(%rbp), %rax
0000000100001174	movq	(%rax), %rax
0000000100001177	addq	$0x30, %rsp
000000010000117b	popq	%rbp
000000010000117c	retq
000000010000117d	movq	%rax, %rdi
0000000100001180	movq	%rdx, -0x28(%rbp)
0000000100001184	callq	0x100001000
0000000100001189	nopl	(%rax)
__ZNSt3__116allocator_traitsINS_9allocatorIiEEE8allocateERS2_m:
0000000100001190	pushq	%rbp
0000000100001191	movq	%rsp, %rbp
0000000100001194	subq	$0x10, %rsp
0000000100001198	xorl	%eax, %eax
000000010000119a	movl	%eax, %edx
000000010000119c	movq	%rdi, -0x8(%rbp)
00000001000011a0	movq	%rsi, -0x10(%rbp)
00000001000011a4	movq	-0x8(%rbp), %rdi
00000001000011a8	movq	-0x10(%rbp), %rsi
00000001000011ac	callq	0x100001450
00000001000011b1	addq	$0x10, %rsp
00000001000011b5	popq	%rbp
00000001000011b6	retq
00000001000011b7	nopw	(%rax,%rax)
__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv:
00000001000011c0	pushq	%rbp
00000001000011c1	movq	%rsp, %rbp
00000001000011c4	subq	$0x10, %rsp
00000001000011c8	movq	%rdi, -0x8(%rbp)
00000001000011cc	movq	-0x8(%rbp), %rax
00000001000011d0	addq	$0x10, %rax
00000001000011d6	movq	%rax, %rdi
00000001000011d9	callq	0x1000015b0
00000001000011de	addq	$0x10, %rsp
00000001000011e2	popq	%rbp
00000001000011e3	retq
00000001000011e4	nopw	%cs:(%rax,%rax)
00000001000011ee	nop
__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv:
00000001000011f0	pushq	%rbp
00000001000011f1	movq	%rsp, %rbp
00000001000011f4	subq	$0x10, %rsp
00000001000011f8	movq	%rdi, -0x8(%rbp)
00000001000011fc	movq	-0x8(%rbp), %rax
0000000100001200	addq	$0x10, %rax
0000000100001206	movq	%rax, %rdi
0000000100001209	callq	0x1000015e0
000000010000120e	addq	$0x10, %rsp
0000000100001212	popq	%rbp
0000000100001213	retq
0000000100001214	nopw	%cs:(%rax,%rax)
000000010000121e	nop
__ZNKSt3__16vectorIiNS_9allocatorIiEEE14__annotate_newEm:
0000000100001220	pushq	%rbp
0000000100001221	movq	%rsp, %rbp
0000000100001224	subq	$0x40, %rsp
0000000100001228	movq	%rdi, -0x8(%rbp)
000000010000122c	movq	%rsi, -0x10(%rbp)
0000000100001230	movq	-0x8(%rbp), %rax
0000000100001234	movq	%rax, %rdi
0000000100001237	movq	%rax, -0x18(%rbp)
000000010000123b	callq	0x100001630
0000000100001240	movq	-0x18(%rbp), %rdi
0000000100001244	movq	%rax, -0x20(%rbp)
0000000100001248	callq	0x100001630
000000010000124d	movq	-0x18(%rbp), %rdi
0000000100001251	movq	%rax, -0x28(%rbp)
0000000100001255	callq	0x100001650
000000010000125a	shlq	$0x2, %rax
000000010000125e	movq	-0x28(%rbp), %rcx
0000000100001262	addq	%rax, %rcx
0000000100001265	movq	-0x18(%rbp), %rdi
0000000100001269	movq	%rcx, -0x30(%rbp)
000000010000126d	callq	0x100001630
0000000100001272	movq	-0x18(%rbp), %rdi
0000000100001276	movq	%rax, -0x38(%rbp)
000000010000127a	callq	0x100001650
000000010000127f	shlq	$0x2, %rax
0000000100001283	movq	-0x38(%rbp), %rcx
0000000100001287	addq	%rax, %rcx
000000010000128a	movq	-0x18(%rbp), %rdi
000000010000128e	movq	%rcx, -0x40(%rbp)
0000000100001292	callq	0x100001630
0000000100001297	movq	-0x10(%rbp), %rcx
000000010000129b	shlq	$0x2, %rcx
000000010000129f	addq	%rcx, %rax
00000001000012a2	movq	-0x18(%rbp), %rdi
00000001000012a6	movq	-0x20(%rbp), %rsi
00000001000012aa	movq	-0x30(%rbp), %rdx
00000001000012ae	movq	-0x40(%rbp), %rcx
00000001000012b2	movq	%rax, %r8
00000001000012b5	callq	0x100001610
00000001000012ba	addq	$0x40, %rsp
00000001000012be	popq	%rbp
00000001000012bf	retq
__ZNSt3__1L3minImEERKT_S3_S3_:
00000001000012c0	pushq	%rbp
00000001000012c1	movq	%rsp, %rbp
00000001000012c4	subq	$0x20, %rsp
00000001000012c8	movq	%rdi, -0x8(%rbp)
00000001000012cc	movq	%rsi, -0x10(%rbp)
00000001000012d0	movq	-0x8(%rbp), %rdi
00000001000012d4	movq	-0x10(%rbp), %rsi
00000001000012d8	callq	0x100001350
00000001000012dd	addq	$0x20, %rsp
00000001000012e1	popq	%rbp
00000001000012e2	retq
00000001000012e3	nopw	%cs:(%rax,%rax)
00000001000012ed	nopl	(%rax)
__ZNSt3__116allocator_traitsINS_9allocatorIiEEE8max_sizeERKS2_:
00000001000012f0	pushq	%rbp
00000001000012f1	movq	%rsp, %rbp
00000001000012f4	subq	$0x20, %rsp
00000001000012f8	movq	%rdi, -0x8(%rbp)
00000001000012fc	movq	-0x8(%rbp), %rdi
0000000100001300	callq	0x1000013d0
0000000100001305	addq	$0x20, %rsp
0000000100001309	popq	%rbp
000000010000130a	retq
000000010000130b	nopl	(%rax,%rax)
__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv:
0000000100001310	pushq	%rbp
0000000100001311	movq	%rsp, %rbp
0000000100001314	subq	$0x10, %rsp
0000000100001318	movq	%rdi, -0x8(%rbp)
000000010000131c	movq	-0x8(%rbp), %rax
0000000100001320	addq	$0x10, %rax
0000000100001326	movq	%rax, %rdi
0000000100001329	callq	0x100001410
000000010000132e	addq	$0x10, %rsp
0000000100001332	popq	%rbp
0000000100001333	retq
0000000100001334	nopw	%cs:(%rax,%rax)
000000010000133e	nop
__ZNSt3__114numeric_limitsIlE3maxEv:
0000000100001340	pushq	%rbp
0000000100001341	movq	%rsp, %rbp
0000000100001344	callq	0x100001440
0000000100001349	popq	%rbp
000000010000134a	retq
000000010000134b	nopl	(%rax,%rax)
__ZNSt3__1L3minImNS_6__lessImmEEEERKT_S5_S5_T0_:
0000000100001350	pushq	%rbp
0000000100001351	movq	%rsp, %rbp
0000000100001354	subq	$0x20, %rsp
0000000100001358	movq	%rdi, -0x10(%rbp)
000000010000135c	movq	%rsi, -0x18(%rbp)
0000000100001360	movq	-0x18(%rbp), %rsi
0000000100001364	movq	-0x10(%rbp), %rdx
0000000100001368	leaq	-0x8(%rbp), %rdi
000000010000136c	callq	0x1000013a0
0000000100001371	testb	$0x1, %al
0000000100001373	jne	0x10000137e
0000000100001379	jmp	0x10000138b
000000010000137e	movq	-0x18(%rbp), %rax
0000000100001382	movq	%rax, -0x20(%rbp)
0000000100001386	jmp	0x100001393
000000010000138b	movq	-0x10(%rbp), %rax
000000010000138f	movq	%rax, -0x20(%rbp)
0000000100001393	movq	-0x20(%rbp), %rax
0000000100001397	addq	$0x20, %rsp
000000010000139b	popq	%rbp
000000010000139c	retq
000000010000139d	nopl	(%rax)
__ZNKSt3__16__lessImmEclERKmS3_:
00000001000013a0	pushq	%rbp
00000001000013a1	movq	%rsp, %rbp
00000001000013a4	movq	%rdi, -0x8(%rbp)
00000001000013a8	movq	%rsi, -0x10(%rbp)
00000001000013ac	movq	%rdx, -0x18(%rbp)
00000001000013b0	movq	-0x10(%rbp), %rax
00000001000013b4	movq	(%rax), %rax
00000001000013b7	movq	-0x18(%rbp), %rcx
00000001000013bb	cmpq	(%rcx), %rax
00000001000013be	setb	%r8b
00000001000013c2	andb	$0x1, %r8b
00000001000013c6	movzbl	%r8b, %eax
00000001000013ca	popq	%rbp
00000001000013cb	retq
00000001000013cc	nopl	(%rax)
__ZNSt3__116allocator_traitsINS_9allocatorIiEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_:
00000001000013d0	pushq	%rbp
00000001000013d1	movq	%rsp, %rbp
00000001000013d4	subq	$0x10, %rsp
00000001000013d8	movq	%rdi, -0x10(%rbp)
00000001000013dc	movq	-0x10(%rbp), %rdi
00000001000013e0	callq	0x1000013f0
00000001000013e5	addq	$0x10, %rsp
00000001000013e9	popq	%rbp
00000001000013ea	retq
00000001000013eb	nopl	(%rax,%rax)
__ZNKSt3__19allocatorIiE8max_sizeEv:
00000001000013f0	pushq	%rbp
00000001000013f1	movq	%rsp, %rbp
00000001000013f4	movq	%rdi, -0x8(%rbp)
00000001000013f8	movabsq	$0x3fffffffffffffff, %rax ## imm = 0x3FFFFFFFFFFFFFFF
0000000100001402	popq	%rbp
0000000100001403	retq
0000000100001404	nopw	%cs:(%rax,%rax)
000000010000140e	nop
__ZNKSt3__117__compressed_pairIPiNS_9allocatorIiEEE6secondEv:
0000000100001410	pushq	%rbp
0000000100001411	movq	%rsp, %rbp
0000000100001414	subq	$0x10, %rsp
0000000100001418	movq	%rdi, -0x8(%rbp)
000000010000141c	movq	-0x8(%rbp), %rax
0000000100001420	movq	%rax, %rdi
0000000100001423	callq	0x100001430
0000000100001428	addq	$0x10, %rsp
000000010000142c	popq	%rbp
000000010000142d	retq
000000010000142e	nop
__ZNKSt3__122__compressed_pair_elemINS_9allocatorIiEELi1ELb1EE5__getEv:
0000000100001430	pushq	%rbp
0000000100001431	movq	%rsp, %rbp
0000000100001434	movq	%rdi, -0x8(%rbp)
0000000100001438	movq	-0x8(%rbp), %rax
000000010000143c	popq	%rbp
000000010000143d	retq
000000010000143e	nop
__ZNSt3__123__libcpp_numeric_limitsIlLb1EE3maxEv:
0000000100001440	pushq	%rbp
0000000100001441	movq	%rsp, %rbp
0000000100001444	movabsq	$0x7fffffffffffffff, %rax ## imm = 0x7FFFFFFFFFFFFFFF
000000010000144e	popq	%rbp
000000010000144f	retq
__ZNSt3__19allocatorIiE8allocateEmPKv:
0000000100001450	pushq	%rbp
0000000100001451	movq	%rsp, %rbp
0000000100001454	subq	$0x20, %rsp
0000000100001458	movq	%rdi, -0x8(%rbp)
000000010000145c	movq	%rsi, -0x10(%rbp)
0000000100001460	movq	%rdx, -0x18(%rbp)
0000000100001464	movq	-0x8(%rbp), %rdi
0000000100001468	movq	-0x10(%rbp), %rax
000000010000146c	movq	%rax, -0x20(%rbp)
0000000100001470	callq	0x1000013f0
0000000100001475	movq	-0x20(%rbp), %rcx
0000000100001479	cmpq	%rax, %rcx
000000010000147c	jbe	0x10000148e
0000000100001482	leaq	0x2a09(%rip), %rdi
0000000100001489	callq	0x1000014b0
000000010000148e	movq	-0x10(%rbp), %rax
0000000100001492	shlq	$0x2, %rax
0000000100001496	movq	%rax, %rdi
0000000100001499	movl	$0x4, %esi
000000010000149e	callq	0x100001510
00000001000014a3	addq	$0x20, %rsp
00000001000014a7	popq	%rbp
00000001000014a8	retq
00000001000014a9	nopl	(%rax)
__ZNSt3__1L20__throw_length_errorEPKc:
00000001000014b0	pushq	%rbp
00000001000014b1	movq	%rsp, %rbp
00000001000014b4	subq	$0x20, %rsp
00000001000014b8	movq	%rdi, -0x8(%rbp)
00000001000014bc	movl	$0x10, %edi
00000001000014c1	callq	0x100003bcc
00000001000014c6	movq	%rax, %rcx
00000001000014c9	movq	-0x8(%rbp), %rsi
00000001000014cd	movq	%rax, %rdi
00000001000014d0	movq	%rcx, -0x20(%rbp)
00000001000014d4	callq	0x100001530
00000001000014d9	jmp	0x1000014de
00000001000014de	movq	0x2b33(%rip), %rsi
00000001000014e5	movq	0x2b14(%rip), %rdx
00000001000014ec	movq	-0x20(%rbp), %rdi
00000001000014f0	callq	0x100003be4
00000001000014f5	movq	%rax, -0x10(%rbp)
00000001000014f9	movl	%edx, -0x14(%rbp)
00000001000014fc	movq	-0x20(%rbp), %rdi
0000000100001500	callq	0x100003bde
0000000100001505	movq	-0x10(%rbp), %rdi
0000000100001509	callq	0x100003aca
000000010000150e	ud2
__ZNSt3__1L17__libcpp_allocateEmm:
0000000100001510	pushq	%rbp
0000000100001511	movq	%rsp, %rbp
0000000100001514	subq	$0x10, %rsp
0000000100001518	movq	%rdi, -0x8(%rbp)
000000010000151c	movq	%rsi, -0x10(%rbp)
0000000100001520	movq	-0x8(%rbp), %rdi
0000000100001524	callq	0x100003bc6
0000000100001529	addq	$0x10, %rsp
000000010000152d	popq	%rbp
000000010000152e	retq
000000010000152f	nop
__ZNSt12length_errorC1EPKc:
0000000100001530	pushq	%rbp
0000000100001531	movq	%rsp, %rbp
0000000100001534	subq	$0x10, %rsp
0000000100001538	movq	%rdi, -0x8(%rbp)
000000010000153c	movq	%rsi, -0x10(%rbp)
0000000100001540	movq	-0x8(%rbp), %rdi
0000000100001544	movq	-0x10(%rbp), %rsi
0000000100001548	callq	0x100001560
000000010000154d	addq	$0x10, %rsp
0000000100001551	popq	%rbp
0000000100001552	retq
0000000100001553	nopw	%cs:(%rax,%rax)
000000010000155d	nopl	(%rax)
__ZNSt12length_errorC2EPKc:
0000000100001560	pushq	%rbp
0000000100001561	movq	%rsp, %rbp
0000000100001564	subq	$0x20, %rsp
0000000100001568	movq	%rdi, -0x8(%rbp)
000000010000156c	movq	%rsi, -0x10(%rbp)
0000000100001570	movq	-0x8(%rbp), %rax
0000000100001574	movq	%rax, %rcx
0000000100001577	movq	-0x10(%rbp), %rsi
000000010000157b	movq	%rcx, %rdi
000000010000157e	movq	%rax, -0x18(%rbp)
0000000100001582	callq	0x100003b4e
0000000100001587	movq	0x2a92(%rip), %rax
000000010000158e	addq	$0x10, %rax
0000000100001594	movq	-0x18(%rbp), %rcx
0000000100001598	movq	%rax, (%rcx)
000000010000159b	addq	$0x20, %rsp
000000010000159f	popq	%rbp
00000001000015a0	retq
00000001000015a1	nopw	%cs:(%rax,%rax)
00000001000015ab	nopl	(%rax,%rax)
__ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEE6secondEv:
00000001000015b0	pushq	%rbp
00000001000015b1	movq	%rsp, %rbp
00000001000015b4	subq	$0x10, %rsp
00000001000015b8	movq	%rdi, -0x8(%rbp)
00000001000015bc	movq	-0x8(%rbp), %rax
00000001000015c0	movq	%rax, %rdi
00000001000015c3	callq	0x1000015d0
00000001000015c8	addq	$0x10, %rsp
00000001000015cc	popq	%rbp
00000001000015cd	retq
00000001000015ce	nop
__ZNSt3__122__compressed_pair_elemINS_9allocatorIiEELi1ELb1EE5__getEv:
00000001000015d0	pushq	%rbp
00000001000015d1	movq	%rsp, %rbp
00000001000015d4	movq	%rdi, -0x8(%rbp)
00000001000015d8	movq	-0x8(%rbp), %rax
00000001000015dc	popq	%rbp
00000001000015dd	retq
00000001000015de	nop
__ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEE5firstEv:
00000001000015e0	pushq	%rbp
00000001000015e1	movq	%rsp, %rbp
00000001000015e4	subq	$0x10, %rsp
00000001000015e8	movq	%rdi, -0x8(%rbp)
00000001000015ec	movq	-0x8(%rbp), %rax
00000001000015f0	movq	%rax, %rdi
00000001000015f3	callq	0x100001600
00000001000015f8	addq	$0x10, %rsp
00000001000015fc	popq	%rbp
00000001000015fd	retq
00000001000015fe	nop
__ZNSt3__122__compressed_pair_elemIPiLi0ELb0EE5__getEv:
0000000100001600	pushq	%rbp
0000000100001601	movq	%rsp, %rbp
0000000100001604	movq	%rdi, -0x8(%rbp)
0000000100001608	movq	-0x8(%rbp), %rax
000000010000160c	popq	%rbp
000000010000160d	retq
000000010000160e	nop
__ZNKSt3__16vectorIiNS_9allocatorIiEEE31__annotate_contiguous_containerEPKvS5_S5_S5_:
0000000100001610	pushq	%rbp
0000000100001611	movq	%rsp, %rbp
0000000100001614	movq	%rdi, -0x8(%rbp)
0000000100001618	movq	%rsi, -0x10(%rbp)
000000010000161c	movq	%rdx, -0x18(%rbp)
0000000100001620	movq	%rcx, -0x20(%rbp)
0000000100001624	movq	%r8, -0x28(%rbp)
0000000100001628	popq	%rbp
0000000100001629	retq
000000010000162a	nopw	(%rax,%rax)
__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv:
0000000100001630	pushq	%rbp
0000000100001631	movq	%rsp, %rbp
0000000100001634	subq	$0x10, %rsp
0000000100001638	movq	%rdi, -0x8(%rbp)
000000010000163c	movq	-0x8(%rbp), %rax
0000000100001640	movq	(%rax), %rdi
0000000100001643	callq	0x100001670
0000000100001648	addq	$0x10, %rsp
000000010000164c	popq	%rbp
000000010000164d	retq
000000010000164e	nop
__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv:
0000000100001650	pushq	%rbp
0000000100001651	movq	%rsp, %rbp
0000000100001654	subq	$0x10, %rsp
0000000100001658	movq	%rdi, -0x8(%rbp)
000000010000165c	movq	-0x8(%rbp), %rax
0000000100001660	movq	%rax, %rdi
0000000100001663	callq	0x100001680
0000000100001668	addq	$0x10, %rsp
000000010000166c	popq	%rbp
000000010000166d	retq
000000010000166e	nop
__ZNSt3__1L12__to_addressIiEEPT_S2_:
0000000100001670	pushq	%rbp
0000000100001671	movq	%rsp, %rbp
0000000100001674	movq	%rdi, -0x8(%rbp)
0000000100001678	movq	-0x8(%rbp), %rax
000000010000167c	popq	%rbp
000000010000167d	retq
000000010000167e	nop
__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE8capacityEv:
0000000100001680	pushq	%rbp
0000000100001681	movq	%rsp, %rbp
0000000100001684	subq	$0x10, %rsp
0000000100001688	movq	%rdi, -0x8(%rbp)
000000010000168c	movq	-0x8(%rbp), %rax
0000000100001690	movq	%rax, %rdi
0000000100001693	movq	%rax, -0x10(%rbp)
0000000100001697	callq	0x1000016c0
000000010000169c	movq	(%rax), %rax
000000010000169f	movq	-0x10(%rbp), %rcx
00000001000016a3	movq	(%rcx), %rdx
00000001000016a6	subq	%rdx, %rax
00000001000016a9	sarq	$0x2, %rax
00000001000016ad	addq	$0x10, %rsp
00000001000016b1	popq	%rbp
00000001000016b2	retq
00000001000016b3	nopw	%cs:(%rax,%rax)
00000001000016bd	nopl	(%rax)
__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv:
00000001000016c0	pushq	%rbp
00000001000016c1	movq	%rsp, %rbp
00000001000016c4	subq	$0x10, %rsp
00000001000016c8	movq	%rdi, -0x8(%rbp)
00000001000016cc	movq	-0x8(%rbp), %rax
00000001000016d0	addq	$0x10, %rax
00000001000016d6	movq	%rax, %rdi
00000001000016d9	callq	0x1000016f0
00000001000016de	addq	$0x10, %rsp
00000001000016e2	popq	%rbp
00000001000016e3	retq
00000001000016e4	nopw	%cs:(%rax,%rax)
00000001000016ee	nop
__ZNKSt3__117__compressed_pairIPiNS_9allocatorIiEEE5firstEv:
00000001000016f0	pushq	%rbp
00000001000016f1	movq	%rsp, %rbp
00000001000016f4	subq	$0x10, %rsp
00000001000016f8	movq	%rdi, -0x8(%rbp)
00000001000016fc	movq	-0x8(%rbp), %rax
0000000100001700	movq	%rax, %rdi
0000000100001703	callq	0x100001710
0000000100001708	addq	$0x10, %rsp
000000010000170c	popq	%rbp
000000010000170d	retq
000000010000170e	nop
__ZNKSt3__122__compressed_pair_elemIPiLi0ELb0EE5__getEv:
0000000100001710	pushq	%rbp
0000000100001711	movq	%rsp, %rbp
0000000100001714	movq	%rdi, -0x8(%rbp)
0000000100001718	movq	-0x8(%rbp), %rax
000000010000171c	popq	%rbp
000000010000171d	retq
000000010000171e	nop
__ZNSt3__16vectorIiNS_9allocatorIiEEE21_ConstructTransactionC1ERS3_m:
0000000100001720	pushq	%rbp
0000000100001721	movq	%rsp, %rbp
0000000100001724	subq	$0x20, %rsp
0000000100001728	movq	%rdi, -0x8(%rbp)
000000010000172c	movq	%rsi, -0x10(%rbp)
0000000100001730	movq	%rdx, -0x18(%rbp)
0000000100001734	movq	-0x8(%rbp), %rdi
0000000100001738	movq	-0x10(%rbp), %rsi
000000010000173c	movq	-0x18(%rbp), %rdx
0000000100001740	callq	0x1000017e0
0000000100001745	addq	$0x20, %rsp
0000000100001749	popq	%rbp
000000010000174a	retq
000000010000174b	nopl	(%rax,%rax)
__ZNSt3__116allocator_traitsINS_9allocatorIiEEE25__construct_range_forwardIKiiiiEENS_9enable_ifIXaaaasr31is_trivially_copy_constructibleIT0_EE5valuesr7is_sameIT1_T2_EE5valueooL_ZNS_17integral_constantIbLb1EE5valueEEntsr15__has_constructIS2_PS7_RT_EE5valueEvE4typeERS2_PSD_SI_RSC_:
0000000100001750	pushq	%rbp
0000000100001751	movq	%rsp, %rbp
0000000100001754	subq	$0x30, %rsp
0000000100001758	movq	%rdi, -0x8(%rbp)
000000010000175c	movq	%rsi, -0x10(%rbp)
0000000100001760	movq	%rdx, -0x18(%rbp)
0000000100001764	movq	%rcx, -0x20(%rbp)
0000000100001768	movq	-0x18(%rbp), %rax
000000010000176c	movq	-0x10(%rbp), %rcx
0000000100001770	subq	%rcx, %rax
0000000100001773	sarq	$0x2, %rax
0000000100001777	movq	%rax, -0x28(%rbp)
000000010000177b	cmpq	$0x0, -0x28(%rbp)
0000000100001780	jle	0x1000017b6
0000000100001786	movq	-0x20(%rbp), %rax
000000010000178a	movq	(%rax), %rax
000000010000178d	movq	-0x10(%rbp), %rcx
0000000100001791	movq	-0x28(%rbp), %rdx
0000000100001795	shlq	$0x2, %rdx
0000000100001799	movq	%rax, %rdi
000000010000179c	movq	%rcx, %rsi
000000010000179f	callq	0x100003bf0
00000001000017a4	movq	-0x28(%rbp), %rax
00000001000017a8	movq	-0x20(%rbp), %rcx
00000001000017ac	shlq	$0x2, %rax
00000001000017b0	addq	(%rcx), %rax
00000001000017b3	movq	%rax, (%rcx)
00000001000017b6	addq	$0x30, %rsp
00000001000017ba	popq	%rbp
00000001000017bb	retq
00000001000017bc	nopl	(%rax)
__ZNSt3__16vectorIiNS_9allocatorIiEEE21_ConstructTransactionD1Ev:
00000001000017c0	pushq	%rbp
00000001000017c1	movq	%rsp, %rbp
00000001000017c4	subq	$0x10, %rsp
00000001000017c8	movq	%rdi, -0x8(%rbp)
00000001000017cc	movq	-0x8(%rbp), %rdi
00000001000017d0	callq	0x100001820
00000001000017d5	addq	$0x10, %rsp
00000001000017d9	popq	%rbp
00000001000017da	retq
00000001000017db	nopl	(%rax,%rax)
__ZNSt3__16vectorIiNS_9allocatorIiEEE21_ConstructTransactionC2ERS3_m:
00000001000017e0	pushq	%rbp
00000001000017e1	movq	%rsp, %rbp
00000001000017e4	movq	%rdi, -0x8(%rbp)
00000001000017e8	movq	%rsi, -0x10(%rbp)
00000001000017ec	movq	%rdx, -0x18(%rbp)
00000001000017f0	movq	-0x8(%rbp), %rax
00000001000017f4	movq	-0x10(%rbp), %rcx
00000001000017f8	movq	%rcx, (%rax)
00000001000017fb	movq	-0x10(%rbp), %rcx
00000001000017ff	movq	0x8(%rcx), %rcx
0000000100001803	movq	%rcx, 0x8(%rax)
0000000100001807	movq	-0x10(%rbp), %rcx
000000010000180b	movq	0x8(%rcx), %rcx
000000010000180f	movq	-0x18(%rbp), %rdx
0000000100001813	shlq	$0x2, %rdx
0000000100001817	addq	%rdx, %rcx
000000010000181a	movq	%rcx, 0x10(%rax)
000000010000181e	popq	%rbp
000000010000181f	retq
__ZNSt3__16vectorIiNS_9allocatorIiEEE21_ConstructTransactionD2Ev:
0000000100001820	pushq	%rbp
0000000100001821	movq	%rsp, %rbp
0000000100001824	movq	%rdi, -0x8(%rbp)
0000000100001828	movq	-0x8(%rbp), %rax
000000010000182c	movq	0x8(%rax), %rcx
0000000100001830	movq	(%rax), %rax
0000000100001833	movq	%rcx, 0x8(%rax)
0000000100001837	popq	%rbp
0000000100001838	retq
0000000100001839	nopl	(%rax)
__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE5clearEv:
0000000100001840	pushq	%rbp
0000000100001841	movq	%rsp, %rbp
0000000100001844	subq	$0x10, %rsp
0000000100001848	movq	%rdi, -0x8(%rbp)
000000010000184c	movq	-0x8(%rbp), %rax
0000000100001850	movq	(%rax), %rsi
0000000100001853	movq	%rax, %rdi
0000000100001856	callq	0x1000018a0
000000010000185b	addq	$0x10, %rsp
000000010000185f	popq	%rbp
0000000100001860	retq
0000000100001861	nopw	%cs:(%rax,%rax)
000000010000186b	nopl	(%rax,%rax)
__ZNSt3__116allocator_traitsINS_9allocatorIiEEE10deallocateERS2_Pim:
0000000100001870	pushq	%rbp
0000000100001871	movq	%rsp, %rbp
0000000100001874	subq	$0x20, %rsp
0000000100001878	movq	%rdi, -0x8(%rbp)
000000010000187c	movq	%rsi, -0x10(%rbp)
0000000100001880	movq	%rdx, -0x18(%rbp)
0000000100001884	movq	-0x8(%rbp), %rdi
0000000100001888	movq	-0x10(%rbp), %rsi
000000010000188c	movq	-0x18(%rbp), %rdx
0000000100001890	callq	0x1000019a0
0000000100001895	addq	$0x20, %rsp
0000000100001899	popq	%rbp
000000010000189a	retq
000000010000189b	nopl	(%rax,%rax)
__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE17__destruct_at_endEPi:
00000001000018a0	pushq	%rbp
00000001000018a1	movq	%rsp, %rbp
00000001000018a4	subq	$0x30, %rsp
00000001000018a8	movq	%rdi, -0x8(%rbp)
00000001000018ac	movq	%rsi, -0x10(%rbp)
00000001000018b0	movq	-0x8(%rbp), %rax
00000001000018b4	movq	0x8(%rax), %rcx
00000001000018b8	movq	%rcx, -0x18(%rbp)
00000001000018bc	movq	%rax, -0x20(%rbp)
00000001000018c0	movq	-0x10(%rbp), %rax
00000001000018c4	cmpq	-0x18(%rbp), %rax
00000001000018c8	je	0x100001905
00000001000018ce	movq	-0x20(%rbp), %rdi
00000001000018d2	callq	0x1000011c0
00000001000018d7	movq	-0x18(%rbp), %rcx
00000001000018db	addq	$-0x4, %rcx
00000001000018df	movq	%rcx, -0x18(%rbp)
00000001000018e3	movq	%rcx, %rdi
00000001000018e6	movq	%rax, -0x28(%rbp)
00000001000018ea	callq	0x100001670
00000001000018ef	movq	-0x28(%rbp), %rdi
00000001000018f3	movq	%rax, %rsi
00000001000018f6	callq	0x100001930
00000001000018fb	jmp	0x100001900
0000000100001900	jmp	0x1000018c0
0000000100001905	movq	-0x10(%rbp), %rax
0000000100001909	movq	-0x20(%rbp), %rcx
000000010000190d	movq	%rax, 0x8(%rcx)
0000000100001911	addq	$0x30, %rsp
0000000100001915	popq	%rbp
0000000100001916	retq
0000000100001917	movq	%rax, %rdi
000000010000191a	movq	%rdx, -0x30(%rbp)
000000010000191e	callq	0x100001000
0000000100001923	nopw	%cs:(%rax,%rax)
000000010000192d	nopl	(%rax)
__ZNSt3__116allocator_traitsINS_9allocatorIiEEE7destroyIiEEvRS2_PT_:
0000000100001930	pushq	%rbp
0000000100001931	movq	%rsp, %rbp
0000000100001934	subq	$0x20, %rsp
0000000100001938	movq	%rdi, -0x8(%rbp)
000000010000193c	movq	%rsi, -0x10(%rbp)
0000000100001940	movq	-0x8(%rbp), %rdi
0000000100001944	movq	-0x10(%rbp), %rsi
0000000100001948	callq	0x100001960
000000010000194d	addq	$0x20, %rsp
0000000100001951	popq	%rbp
0000000100001952	retq
0000000100001953	nopw	%cs:(%rax,%rax)
000000010000195d	nopl	(%rax)
__ZNSt3__116allocator_traitsINS_9allocatorIiEEE9__destroyIiEEvNS_17integral_constantIbLb1EEERS2_PT_:
0000000100001960	pushq	%rbp
0000000100001961	movq	%rsp, %rbp
0000000100001964	subq	$0x20, %rsp
0000000100001968	movq	%rdi, -0x10(%rbp)
000000010000196c	movq	%rsi, -0x18(%rbp)
0000000100001970	movq	-0x10(%rbp), %rdi
0000000100001974	movq	-0x18(%rbp), %rsi
0000000100001978	callq	0x100001990
000000010000197d	addq	$0x20, %rsp
0000000100001981	popq	%rbp
0000000100001982	retq
0000000100001983	nopw	%cs:(%rax,%rax)
000000010000198d	nopl	(%rax)
__ZNSt3__19allocatorIiE7destroyEPi:
0000000100001990	pushq	%rbp
0000000100001991	movq	%rsp, %rbp
0000000100001994	movq	%rdi, -0x8(%rbp)
0000000100001998	movq	%rsi, -0x10(%rbp)
000000010000199c	popq	%rbp
000000010000199d	retq
000000010000199e	nop
__ZNSt3__19allocatorIiE10deallocateEPim:
00000001000019a0	pushq	%rbp
00000001000019a1	movq	%rsp, %rbp
00000001000019a4	subq	$0x20, %rsp
00000001000019a8	movq	%rdi, -0x8(%rbp)
00000001000019ac	movq	%rsi, -0x10(%rbp)
00000001000019b0	movq	%rdx, -0x18(%rbp)
00000001000019b4	movq	-0x10(%rbp), %rdi
00000001000019b8	movq	-0x18(%rbp), %rax
00000001000019bc	shlq	$0x2, %rax
00000001000019c0	movl	$0x4, %edx
00000001000019c5	movq	%rax, %rsi
00000001000019c8	callq	0x1000019f0
00000001000019cd	jmp	0x1000019d2
00000001000019d2	addq	$0x20, %rsp
00000001000019d6	popq	%rbp
00000001000019d7	retq
00000001000019d8	movq	%rax, %rdi
00000001000019db	movq	%rdx, -0x20(%rbp)
00000001000019df	callq	0x100001000
00000001000019e4	nopw	%cs:(%rax,%rax)
00000001000019ee	nop
__ZNSt3__1L19__libcpp_deallocateEPvmm:
00000001000019f0	pushq	%rbp
00000001000019f1	movq	%rsp, %rbp
00000001000019f4	subq	$0x20, %rsp
00000001000019f8	movq	%rdi, -0x8(%rbp)
00000001000019fc	movq	%rsi, -0x10(%rbp)
0000000100001a00	movq	%rdx, -0x18(%rbp)
0000000100001a04	movq	-0x8(%rbp), %rdi
0000000100001a08	movq	-0x10(%rbp), %rsi
0000000100001a0c	movq	-0x18(%rbp), %rdx
0000000100001a10	callq	0x100001a20
0000000100001a15	addq	$0x20, %rsp
0000000100001a19	popq	%rbp
0000000100001a1a	retq
0000000100001a1b	nopl	(%rax,%rax)
__ZNSt3__117_DeallocateCaller33__do_deallocate_handle_size_alignEPvmm:
0000000100001a20	pushq	%rbp
0000000100001a21	movq	%rsp, %rbp
0000000100001a24	subq	$0x20, %rsp
0000000100001a28	movq	%rdi, -0x8(%rbp)
0000000100001a2c	movq	%rsi, -0x10(%rbp)
0000000100001a30	movq	%rdx, -0x18(%rbp)
0000000100001a34	movq	-0x8(%rbp), %rdi
0000000100001a38	movq	-0x10(%rbp), %rsi
0000000100001a3c	callq	0x100003b84
0000000100001a41	addq	$0x20, %rsp
0000000100001a45	popq	%rbp
0000000100001a46	retq
0000000100001a47	nopw	(%rax,%rax)
__ZNSt3__117_DeallocateCaller27__do_deallocate_handle_sizeEPvm:
0000000100001a50	pushq	%rbp
0000000100001a51	movq	%rsp, %rbp
0000000100001a54	subq	$0x10, %rsp
0000000100001a58	movq	%rdi, -0x8(%rbp)
0000000100001a5c	movq	%rsi, -0x10(%rbp)
0000000100001a60	movq	-0x8(%rbp), %rdi
0000000100001a64	callq	0x100003b8a
0000000100001a69	addq	$0x10, %rsp
0000000100001a6d	popq	%rbp
0000000100001a6e	retq
0000000100001a6f	nop
__ZNSt3__117_DeallocateCaller9__do_callEPv:
0000000100001a70	pushq	%rbp
0000000100001a71	movq	%rsp, %rbp
0000000100001a74	subq	$0x10, %rsp
0000000100001a78	movq	%rdi, -0x8(%rbp)
0000000100001a7c	movq	-0x8(%rbp), %rdi
0000000100001a80	callq	0x100003bc0
0000000100001a85	addq	$0x10, %rsp
0000000100001a89	popq	%rbp
0000000100001a8a	retq
0000000100001a8b	nopl	(%rax,%rax)
__ZNSt3__16vectorIiNS_9allocatorIiEEED2Ev:
0000000100001a90	pushq	%rbp
0000000100001a91	movq	%rsp, %rbp
0000000100001a94	subq	$0x10, %rsp
0000000100001a98	movq	%rdi, -0x8(%rbp)
0000000100001a9c	movq	-0x8(%rbp), %rax
0000000100001aa0	movq	%rax, %rdi
0000000100001aa3	movq	%rax, -0x10(%rbp)
0000000100001aa7	callq	0x100001ac0
0000000100001aac	movq	-0x10(%rbp), %rax
0000000100001ab0	movq	%rax, %rdi
0000000100001ab3	callq	0x100000f90
0000000100001ab8	addq	$0x10, %rsp
0000000100001abc	popq	%rbp
0000000100001abd	retq
0000000100001abe	nop
__ZNKSt3__16vectorIiNS_9allocatorIiEEE17__annotate_deleteEv:
0000000100001ac0	pushq	%rbp
0000000100001ac1	movq	%rsp, %rbp
0000000100001ac4	subq	$0x50, %rsp
0000000100001ac8	movq	%rdi, -0x8(%rbp)
0000000100001acc	movq	-0x8(%rbp), %rax
0000000100001ad0	movq	%rax, %rdi
0000000100001ad3	movq	%rax, -0x10(%rbp)
0000000100001ad7	callq	0x100001630
0000000100001adc	movq	-0x10(%rbp), %rdi
0000000100001ae0	movq	%rax, -0x18(%rbp)
0000000100001ae4	callq	0x100001630
0000000100001ae9	movq	-0x10(%rbp), %rdi
0000000100001aed	movq	%rax, -0x20(%rbp)
0000000100001af1	callq	0x100001650
0000000100001af6	shlq	$0x2, %rax
0000000100001afa	movq	-0x20(%rbp), %rcx
0000000100001afe	addq	%rax, %rcx
0000000100001b01	movq	-0x10(%rbp), %rdi
0000000100001b05	movq	%rcx, -0x28(%rbp)
0000000100001b09	callq	0x100001630
0000000100001b0e	movq	-0x10(%rbp), %rdi
0000000100001b12	movq	%rax, -0x30(%rbp)
0000000100001b16	callq	0x100001b80
0000000100001b1b	shlq	$0x2, %rax
0000000100001b1f	movq	-0x30(%rbp), %rcx
0000000100001b23	addq	%rax, %rcx
0000000100001b26	movq	-0x10(%rbp), %rdi
0000000100001b2a	movq	%rcx, -0x38(%rbp)
0000000100001b2e	callq	0x100001630
0000000100001b33	movq	-0x10(%rbp), %rdi
0000000100001b37	movq	%rax, -0x40(%rbp)
0000000100001b3b	callq	0x100001650
0000000100001b40	shlq	$0x2, %rax
0000000100001b44	movq	-0x40(%rbp), %rcx
0000000100001b48	addq	%rax, %rcx
0000000100001b4b	movq	-0x10(%rbp), %rdi
0000000100001b4f	movq	-0x18(%rbp), %rsi
0000000100001b53	movq	-0x28(%rbp), %rdx
0000000100001b57	movq	-0x38(%rbp), %rax
0000000100001b5b	movq	%rcx, -0x48(%rbp)
0000000100001b5f	movq	%rax, %rcx
0000000100001b62	movq	-0x48(%rbp), %r8
0000000100001b66	callq	0x100001610
0000000100001b6b	addq	$0x50, %rsp
0000000100001b6f	popq	%rbp
0000000100001b70	retq
0000000100001b71	nopw	%cs:(%rax,%rax)
0000000100001b7b	nopl	(%rax,%rax)
__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv:
0000000100001b80	pushq	%rbp
0000000100001b81	movq	%rsp, %rbp
0000000100001b84	movq	%rdi, -0x8(%rbp)
0000000100001b88	movq	-0x8(%rbp), %rax
0000000100001b8c	movq	0x8(%rax), %rcx
0000000100001b90	movq	(%rax), %rax
0000000100001b93	subq	%rax, %rcx
0000000100001b96	sarq	$0x2, %rcx
0000000100001b9a	movq	%rcx, %rax
0000000100001b9d	popq	%rbp
0000000100001b9e	retq
0000000100001b9f	nop
__ZN2ft3RBTIiNSt3__14lessIiEENS1_9allocatorINS_12RedBlackTreeIiEEEEE11find_helperEPS6_i:
0000000100001ba0	pushq	%rbp
0000000100001ba1	movq	%rsp, %rbp
0000000100001ba4	subq	$0x30, %rsp
0000000100001ba8	movq	%rdi, -0x10(%rbp)
0000000100001bac	movq	%rsi, -0x18(%rbp)
0000000100001bb0	movl	%edx, -0x1c(%rbp)
0000000100001bb3	movq	-0x10(%rbp), %rax
0000000100001bb7	cmpq	$0x0, -0x18(%rbp)
0000000100001bbc	movq	%rax, -0x28(%rbp)
0000000100001bc0	jne	0x100001bcf
0000000100001bc6	movb	$0x0, -0x1(%rbp)
0000000100001bca	jmp	0x100001c5d
0000000100001bcf	movq	-0x28(%rbp), %rax
0000000100001bd3	addq	$0x10, %rax
0000000100001bd9	movq	-0x18(%rbp), %rdx
0000000100001bdd	movq	%rax, %rdi
0000000100001be0	leaq	-0x1c(%rbp), %rsi
0000000100001be4	callq	0x100001c70
0000000100001be9	testb	$0x1, %al
0000000100001beb	jne	0x100001bf6
0000000100001bf1	jmp	0x100001c14
0000000100001bf6	movq	-0x18(%rbp), %rax
0000000100001bfa	movq	0x8(%rax), %rsi
0000000100001bfe	movl	-0x1c(%rbp), %edx
0000000100001c01	movq	-0x28(%rbp), %rdi
0000000100001c05	callq	0x100001ba0
0000000100001c0a	andb	$0x1, %al
0000000100001c0c	movb	%al, -0x1(%rbp)
0000000100001c0f	jmp	0x100001c5d
0000000100001c14	movq	-0x28(%rbp), %rax
0000000100001c18	addq	$0x10, %rax
0000000100001c1e	movq	-0x18(%rbp), %rsi
0000000100001c22	movq	%rax, %rdi
0000000100001c25	leaq	-0x1c(%rbp), %rdx
0000000100001c29	callq	0x100001c70
0000000100001c2e	testb	$0x1, %al
0000000100001c30	jne	0x100001c3b
0000000100001c36	jmp	0x100001c59
0000000100001c3b	movq	-0x18(%rbp), %rax
0000000100001c3f	movq	0x10(%rax), %rsi
0000000100001c43	movl	-0x1c(%rbp), %edx
0000000100001c46	movq	-0x28(%rbp), %rdi
0000000100001c4a	callq	0x100001ba0
0000000100001c4f	andb	$0x1, %al
0000000100001c51	movb	%al, -0x1(%rbp)
0000000100001c54	jmp	0x100001c5d
0000000100001c59	movb	$0x1, -0x1(%rbp)
0000000100001c5d	movb	-0x1(%rbp), %al
0000000100001c60	andb	$0x1, %al
0000000100001c62	movzbl	%al, %eax
0000000100001c65	addq	$0x30, %rsp
0000000100001c69	popq	%rbp
0000000100001c6a	retq
0000000100001c6b	nopl	(%rax,%rax)
__ZNKSt3__14lessIiEclERKiS3_:
0000000100001c70	pushq	%rbp
0000000100001c71	movq	%rsp, %rbp
0000000100001c74	movq	%rdi, -0x8(%rbp)
0000000100001c78	movq	%rsi, -0x10(%rbp)
0000000100001c7c	movq	%rdx, -0x18(%rbp)
0000000100001c80	movq	-0x10(%rbp), %rax
0000000100001c84	movl	(%rax), %ecx
0000000100001c86	movq	-0x18(%rbp), %rax
0000000100001c8a	cmpl	(%rax), %ecx
0000000100001c8c	setl	%r8b
0000000100001c90	andb	$0x1, %r8b
0000000100001c94	movzbl	%r8b, %eax
0000000100001c98	popq	%rbp
0000000100001c99	retq
0000000100001c9a	nopw	(%rax,%rax)
__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m:
0000000100001ca0	pushq	%rbp
0000000100001ca1	movq	%rsp, %rbp
0000000100001ca4	subq	$0xa0, %rsp
0000000100001cab	movq	%rdi, -0x8(%rbp)
0000000100001caf	movq	%rsi, -0x10(%rbp)
0000000100001cb3	movq	%rdx, -0x18(%rbp)
0000000100001cb7	movq	-0x8(%rbp), %rsi
0000000100001cbb	leaq	-0x28(%rbp), %rdi
0000000100001cbf	callq	0x100003b72
0000000100001cc4	jmp	0x100001cc9
0000000100001cc9	leaq	-0x28(%rbp), %rdi
0000000100001ccd	callq	0x100001ec0
0000000100001cd2	movb	%al, -0x49(%rbp)
0000000100001cd5	jmp	0x100001cda
0000000100001cda	movb	-0x49(%rbp), %al
0000000100001cdd	testb	$0x1, %al
0000000100001cdf	jne	0x100001cea
0000000100001ce5	jmp	0x100001e56
0000000100001cea	movq	-0x8(%rbp), %rsi
0000000100001cee	leaq	-0x48(%rbp), %rdi
0000000100001cf2	callq	0x100002100
0000000100001cf7	movq	-0x10(%rbp), %rsi
0000000100001cfb	movq	-0x8(%rbp), %rax
0000000100001cff	movq	(%rax), %rcx
0000000100001d02	movq	-0x18(%rcx), %rcx
0000000100001d06	addq	%rcx, %rax
0000000100001d09	movq	%rax, %rdi
0000000100001d0c	movq	%rsi, -0x58(%rbp)
0000000100001d10	callq	0x100002130
0000000100001d15	movl	%eax, -0x5c(%rbp)
0000000100001d18	jmp	0x100001d1d
0000000100001d1d	movl	-0x5c(%rbp), %eax
0000000100001d20	andl	$0xb0, %eax
0000000100001d25	cmpl	$0x20, %eax
0000000100001d28	jne	0x100001d3f
0000000100001d2e	movq	-0x10(%rbp), %rax
0000000100001d32	addq	-0x18(%rbp), %rax
0000000100001d36	movq	%rax, -0x68(%rbp)
0000000100001d3a	jmp	0x100001d47
0000000100001d3f	movq	-0x10(%rbp), %rax
0000000100001d43	movq	%rax, -0x68(%rbp)
0000000100001d47	movq	-0x68(%rbp), %rax
0000000100001d4b	movq	-0x10(%rbp), %rcx
0000000100001d4f	movq	-0x18(%rbp), %rdx
0000000100001d53	addq	%rdx, %rcx
0000000100001d56	movq	-0x8(%rbp), %rdx
0000000100001d5a	movq	(%rdx), %rsi
0000000100001d5d	movq	-0x18(%rsi), %rsi
0000000100001d61	addq	%rsi, %rdx
0000000100001d64	movq	%rdx, %rdi
0000000100001d67	movq	%rax, -0x70(%rbp)
0000000100001d6b	movq	%rcx, -0x78(%rbp)
0000000100001d6f	movq	%rdx, -0x80(%rbp)
0000000100001d73	callq	0x100002150
0000000100001d78	movb	%al, -0x81(%rbp)
0000000100001d7e	jmp	0x100001d83
0000000100001d83	movq	-0x48(%rbp), %rdi
0000000100001d87	movb	-0x81(%rbp), %al
0000000100001d8d	movsbl	%al, %r9d
0000000100001d91	movq	-0x58(%rbp), %rsi
0000000100001d95	movq	-0x70(%rbp), %rdx
0000000100001d99	movq	-0x78(%rbp), %rcx
0000000100001d9d	movq	-0x80(%rbp), %r8
0000000100001da1	callq	0x100001ee0
0000000100001da6	movq	%rax, -0x90(%rbp)
0000000100001dad	jmp	0x100001db2
0000000100001db2	movq	-0x90(%rbp), %rax
0000000100001db9	movq	%rax, -0x40(%rbp)
0000000100001dbd	leaq	-0x40(%rbp), %rdi
0000000100001dc1	callq	0x1000021c0
0000000100001dc6	testb	$0x1, %al
0000000100001dc8	jne	0x100001dd3
0000000100001dce	jmp	0x100001e51
0000000100001dd3	movq	-0x8(%rbp), %rax
0000000100001dd7	movq	(%rax), %rcx
0000000100001dda	movq	-0x18(%rcx), %rcx
0000000100001dde	addq	%rcx, %rax
0000000100001de1	movl	$0x5, %esi
0000000100001de6	movq	%rax, %rdi
0000000100001de9	callq	0x1000021e0
0000000100001dee	jmp	0x100001df3
0000000100001df3	jmp	0x100001e51
0000000100001df8	movq	%rax, -0x30(%rbp)
0000000100001dfc	movl	%edx, -0x34(%rbp)
0000000100001dff	jmp	0x100001e14
0000000100001e04	movq	%rax, -0x30(%rbp)
0000000100001e08	movl	%edx, -0x34(%rbp)
0000000100001e0b	leaq	-0x28(%rbp), %rdi
0000000100001e0f	callq	0x100003b78
0000000100001e14	movq	-0x30(%rbp), %rdi
0000000100001e18	callq	0x100003bd2
0000000100001e1d	movq	-0x8(%rbp), %rcx
0000000100001e21	movq	(%rcx), %rdx
0000000100001e24	movq	-0x18(%rdx), %rdx
0000000100001e28	addq	%rdx, %rcx
0000000100001e2b	movq	%rcx, %rdi
0000000100001e2e	movq	%rax, -0x98(%rbp)
0000000100001e35	callq	0x100003ba8
0000000100001e3a	jmp	0x100001e3f
0000000100001e3f	callq	0x100003bd8
0000000100001e44	movq	-0x8(%rbp), %rax
0000000100001e48	addq	$0xa0, %rsp
0000000100001e4f	popq	%rbp
0000000100001e50	retq
0000000100001e51	jmp	0x100001e56
0000000100001e56	leaq	-0x28(%rbp), %rdi
0000000100001e5a	callq	0x100003b78
0000000100001e5f	jmp	0x100001e44
0000000100001e64	movq	%rax, -0x30(%rbp)
0000000100001e68	movl	%edx, -0x34(%rbp)
0000000100001e6b	callq	0x100003bd8
0000000100001e70	jmp	0x100001e75
0000000100001e75	jmp	0x100001e7a
0000000100001e7a	movq	-0x30(%rbp), %rdi
0000000100001e7e	callq	0x100003aca
0000000100001e83	ud2
0000000100001e85	movq	%rax, %rdi
0000000100001e88	movq	%rdx, -0xa0(%rbp)
0000000100001e8f	callq	0x100001000
0000000100001e94	nopw	%cs:(%rax,%rax)
0000000100001e9e	nop
__ZNSt3__111char_traitsIcE6lengthEPKc:
0000000100001ea0	pushq	%rbp
0000000100001ea1	movq	%rsp, %rbp
0000000100001ea4	subq	$0x10, %rsp
0000000100001ea8	movq	%rdi, -0x8(%rbp)
0000000100001eac	movq	-0x8(%rbp), %rdi
0000000100001eb0	callq	0x100003bf6
0000000100001eb5	addq	$0x10, %rsp
0000000100001eb9	popq	%rbp
0000000100001eba	retq
0000000100001ebb	nopl	(%rax,%rax)
__ZNKSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentrycvbEv:
0000000100001ec0	pushq	%rbp
0000000100001ec1	movq	%rsp, %rbp
0000000100001ec4	movq	%rdi, -0x8(%rbp)
0000000100001ec8	movq	-0x8(%rbp), %rax
0000000100001ecc	movb	(%rax), %cl
0000000100001ece	andb	$0x1, %cl
0000000100001ed1	movzbl	%cl, %eax
0000000100001ed4	popq	%rbp
0000000100001ed5	retq
0000000100001ed6	nopw	%cs:(%rax,%rax)
__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_:
0000000100001ee0	pushq	%rbp
0000000100001ee1	movq	%rsp, %rbp
0000000100001ee4	subq	$0x90, %rsp
0000000100001eeb	movq	%rdi, -0x10(%rbp)
0000000100001eef	movq	%rsi, -0x18(%rbp)
0000000100001ef3	movq	%rdx, -0x20(%rbp)
0000000100001ef7	movq	%rcx, -0x28(%rbp)
0000000100001efb	movq	%r8, -0x30(%rbp)
0000000100001eff	movb	%r9b, -0x31(%rbp)
0000000100001f03	cmpq	$0x0, -0x10(%rbp)
0000000100001f08	jne	0x100001f1b
0000000100001f0e	movq	-0x10(%rbp), %rax
0000000100001f12	movq	%rax, -0x8(%rbp)
0000000100001f16	jmp	0x1000020d9
0000000100001f1b	movq	-0x28(%rbp), %rax
0000000100001f1f	movq	-0x18(%rbp), %rcx
0000000100001f23	subq	%rcx, %rax
0000000100001f26	movq	%rax, -0x40(%rbp)
0000000100001f2a	movq	-0x30(%rbp), %rdi
0000000100001f2e	callq	0x100002210
0000000100001f33	movq	%rax, -0x48(%rbp)
0000000100001f37	movq	-0x48(%rbp), %rax
0000000100001f3b	cmpq	-0x40(%rbp), %rax
0000000100001f3f	jle	0x100001f59
0000000100001f45	movq	-0x40(%rbp), %rax
0000000100001f49	movq	-0x48(%rbp), %rcx
0000000100001f4d	subq	%rax, %rcx
0000000100001f50	movq	%rcx, -0x48(%rbp)
0000000100001f54	jmp	0x100001f61
0000000100001f59	movq	$0x0, -0x48(%rbp)
0000000100001f61	movq	-0x20(%rbp), %rax
0000000100001f65	movq	-0x18(%rbp), %rcx
0000000100001f69	subq	%rcx, %rax
0000000100001f6c	movq	%rax, -0x50(%rbp)
0000000100001f70	cmpq	$0x0, -0x50(%rbp)
0000000100001f75	jle	0x100001fb0
0000000100001f7b	movq	-0x10(%rbp), %rdi
0000000100001f7f	movq	-0x18(%rbp), %rsi
0000000100001f83	movq	-0x50(%rbp), %rdx
0000000100001f87	callq	0x100002230
0000000100001f8c	cmpq	-0x50(%rbp), %rax
0000000100001f90	je	0x100001fab
0000000100001f96	movq	$0x0, -0x10(%rbp)
0000000100001f9e	movq	-0x10(%rbp), %rax
0000000100001fa2	movq	%rax, -0x8(%rbp)
0000000100001fa6	jmp	0x1000020d9
0000000100001fab	jmp	0x100001fb0
0000000100001fb0	cmpq	$0x0, -0x48(%rbp)
0000000100001fb5	jle	0x100002075
0000000100001fbb	movq	-0x48(%rbp), %rsi
0000000100001fbf	movsbl	-0x31(%rbp), %edx
0000000100001fc3	leaq	-0x68(%rbp), %rax
0000000100001fc7	movq	%rax, %rdi
0000000100001fca	movq	%rax, -0x80(%rbp)
0000000100001fce	callq	0x100002260
0000000100001fd3	movq	-0x10(%rbp), %rdi
0000000100001fd7	movq	-0x80(%rbp), %rax
0000000100001fdb	movq	%rdi, -0x88(%rbp)
0000000100001fe2	movq	%rax, %rdi
0000000100001fe5	callq	0x100002290
0000000100001fea	movq	-0x48(%rbp), %rdx
0000000100001fee	movq	-0x88(%rbp), %rdi
0000000100001ff5	movq	%rax, %rsi
0000000100001ff8	callq	0x100002230
0000000100001ffd	movq	%rax, -0x90(%rbp)
0000000100002004	jmp	0x100002009
0000000100002009	movq	-0x90(%rbp), %rax
0000000100002010	cmpq	-0x48(%rbp), %rax
0000000100002014	je	0x10000204b
000000010000201a	movq	$0x0, -0x10(%rbp)
0000000100002022	movq	-0x10(%rbp), %rax
0000000100002026	movq	%rax, -0x8(%rbp)
000000010000202a	movl	$0x1, -0x78(%rbp)
0000000100002031	jmp	0x100002052
0000000100002036	movq	%rax, -0x70(%rbp)
000000010000203a	movl	%edx, -0x74(%rbp)
000000010000203d	leaq	-0x68(%rbp), %rdi
0000000100002041	callq	0x100003b6c
0000000100002046	jmp	0x1000020e6
000000010000204b	movl	$0x0, -0x78(%rbp)
0000000100002052	leaq	-0x68(%rbp), %rdi
0000000100002056	callq	0x100003b6c
000000010000205b	movl	-0x78(%rbp), %eax
000000010000205e	testl	%eax, %eax
0000000100002060	je	0x100002070
0000000100002066	jmp	0x10000206b
000000010000206b	jmp	0x1000020d9
0000000100002070	jmp	0x100002075
0000000100002075	movq	-0x28(%rbp), %rax
0000000100002079	movq	-0x20(%rbp), %rcx
000000010000207d	subq	%rcx, %rax
0000000100002080	movq	%rax, -0x50(%rbp)
0000000100002084	cmpq	$0x0, -0x50(%rbp)
0000000100002089	jle	0x1000020c4
000000010000208f	movq	-0x10(%rbp), %rdi
0000000100002093	movq	-0x20(%rbp), %rsi
0000000100002097	movq	-0x50(%rbp), %rdx
000000010000209b	callq	0x100002230
00000001000020a0	cmpq	-0x50(%rbp), %rax
00000001000020a4	je	0x1000020bf
00000001000020aa	movq	$0x0, -0x10(%rbp)
00000001000020b2	movq	-0x10(%rbp), %rax
00000001000020b6	movq	%rax, -0x8(%rbp)
00000001000020ba	jmp	0x1000020d9
00000001000020bf	jmp	0x1000020c4
00000001000020c4	xorl	%eax, %eax
00000001000020c6	movl	%eax, %esi
00000001000020c8	movq	-0x30(%rbp), %rdi
00000001000020cc	callq	0x1000022c0
00000001000020d1	movq	-0x10(%rbp), %rcx
00000001000020d5	movq	%rcx, -0x8(%rbp)
00000001000020d9	movq	-0x8(%rbp), %rax
00000001000020dd	addq	$0x90, %rsp
00000001000020e4	popq	%rbp
00000001000020e5	retq
00000001000020e6	movq	-0x70(%rbp), %rdi
00000001000020ea	callq	0x100003aca
00000001000020ef	ud2
00000001000020f1	ud2
00000001000020f3	nopw	%cs:(%rax,%rax)
00000001000020fd	nopl	(%rax)
__ZNSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEEC1ERNS_13basic_ostreamIcS2_EE:
0000000100002100	pushq	%rbp
0000000100002101	movq	%rsp, %rbp
0000000100002104	subq	$0x10, %rsp
0000000100002108	movq	%rdi, -0x8(%rbp)
000000010000210c	movq	%rsi, -0x10(%rbp)
0000000100002110	movq	-0x8(%rbp), %rdi
0000000100002114	movq	-0x10(%rbp), %rsi
0000000100002118	callq	0x100002570
000000010000211d	addq	$0x10, %rsp
0000000100002121	popq	%rbp
0000000100002122	retq
0000000100002123	nopw	%cs:(%rax,%rax)
000000010000212d	nopl	(%rax)
__ZNKSt3__18ios_base5flagsEv:
0000000100002130	pushq	%rbp
0000000100002131	movq	%rsp, %rbp
0000000100002134	movq	%rdi, -0x8(%rbp)
0000000100002138	movq	-0x8(%rbp), %rax
000000010000213c	movl	0x8(%rax), %eax
000000010000213f	popq	%rbp
0000000100002140	retq
0000000100002141	nopw	%cs:(%rax,%rax)
000000010000214b	nopl	(%rax,%rax)
__ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE4fillEv:
0000000100002150	pushq	%rbp
0000000100002151	movq	%rsp, %rbp
0000000100002154	subq	$0x10, %rsp
0000000100002158	movq	%rdi, -0x8(%rbp)
000000010000215c	movq	-0x8(%rbp), %rax
0000000100002160	movq	%rax, -0x10(%rbp)
0000000100002164	callq	0x100003b5a
0000000100002169	movq	-0x10(%rbp), %rcx
000000010000216d	movl	0x90(%rcx), %esi
0000000100002173	movl	%eax, %edi
0000000100002175	callq	0x100003b54
000000010000217a	testb	$0x1, %al
000000010000217c	jne	0x100002187
0000000100002182	jmp	0x1000021a2
0000000100002187	movq	-0x10(%rbp), %rdi
000000010000218b	movl	$0x20, %esi
0000000100002190	callq	0x100002640
0000000100002195	movsbl	%al, %ecx
0000000100002198	movq	-0x10(%rbp), %rdx
000000010000219c	movl	%ecx, 0x90(%rdx)
00000001000021a2	movq	-0x10(%rbp), %rax
00000001000021a6	movl	0x90(%rax), %ecx
00000001000021ac	movsbl	%cl, %edx
00000001000021af	movl	%edx, %eax
00000001000021b1	addq	$0x10, %rsp
00000001000021b5	popq	%rbp
00000001000021b6	retq
00000001000021b7	nopw	(%rax,%rax)
__ZNKSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEE6failedEv:
00000001000021c0	pushq	%rbp
00000001000021c1	movq	%rsp, %rbp
00000001000021c4	movq	%rdi, -0x8(%rbp)
00000001000021c8	movq	-0x8(%rbp), %rax
00000001000021cc	cmpq	$0x0, (%rax)
00000001000021d0	sete	%cl
00000001000021d3	andb	$0x1, %cl
00000001000021d6	movzbl	%cl, %eax
00000001000021d9	popq	%rbp
00000001000021da	retq
00000001000021db	nopl	(%rax,%rax)
__ZNSt3__19basic_iosIcNS_11char_traitsIcEEE8setstateEj:
00000001000021e0	pushq	%rbp
00000001000021e1	movq	%rsp, %rbp
00000001000021e4	subq	$0x10, %rsp
00000001000021e8	movq	%rdi, -0x8(%rbp)
00000001000021ec	movl	%esi, -0xc(%rbp)
00000001000021ef	movq	-0x8(%rbp), %rax
00000001000021f3	movl	-0xc(%rbp), %esi
00000001000021f6	movq	%rax, %rdi
00000001000021f9	callq	0x100002720
00000001000021fe	addq	$0x10, %rsp
0000000100002202	popq	%rbp
0000000100002203	retq
0000000100002204	nopw	%cs:(%rax,%rax)
000000010000220e	nop
__ZNKSt3__18ios_base5widthEv:
0000000100002210	pushq	%rbp
0000000100002211	movq	%rsp, %rbp
0000000100002214	movq	%rdi, -0x8(%rbp)
0000000100002218	movq	-0x8(%rbp), %rax
000000010000221c	movq	0x18(%rax), %rax
0000000100002220	popq	%rbp
0000000100002221	retq
0000000100002222	nopw	%cs:(%rax,%rax)
000000010000222c	nopl	(%rax)
__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputnEPKcl:
0000000100002230	pushq	%rbp
0000000100002231	movq	%rsp, %rbp
0000000100002234	subq	$0x20, %rsp
0000000100002238	movq	%rdi, -0x8(%rbp)
000000010000223c	movq	%rsi, -0x10(%rbp)
0000000100002240	movq	%rdx, -0x18(%rbp)
0000000100002244	movq	-0x8(%rbp), %rax
0000000100002248	movq	-0x10(%rbp), %rsi
000000010000224c	movq	-0x18(%rbp), %rdx
0000000100002250	movq	(%rax), %rcx
0000000100002253	movq	%rax, %rdi
0000000100002256	callq	*0x60(%rcx)
0000000100002259	addq	$0x20, %rsp
000000010000225d	popq	%rbp
000000010000225e	retq
000000010000225f	nop
__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Emc:
0000000100002260	pushq	%rbp
0000000100002261	movq	%rsp, %rbp
0000000100002264	subq	$0x20, %rsp
0000000100002268	movq	%rdi, -0x8(%rbp)
000000010000226c	movq	%rsi, -0x10(%rbp)
0000000100002270	movb	%dl, -0x11(%rbp)
0000000100002273	movq	-0x8(%rbp), %rdi
0000000100002277	movq	-0x10(%rbp), %rsi
000000010000227b	movsbl	-0x11(%rbp), %edx
000000010000227f	callq	0x1000022f0
0000000100002284	addq	$0x20, %rsp
0000000100002288	popq	%rbp
0000000100002289	retq
000000010000228a	nopw	(%rax,%rax)
__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv:
0000000100002290	pushq	%rbp
0000000100002291	movq	%rsp, %rbp
0000000100002294	subq	$0x10, %rsp
0000000100002298	movq	%rdi, -0x8(%rbp)
000000010000229c	movq	-0x8(%rbp), %rdi
00000001000022a0	callq	0x100002420
00000001000022a5	movq	%rax, %rdi
00000001000022a8	callq	0x100002410
00000001000022ad	addq	$0x10, %rsp
00000001000022b1	popq	%rbp
00000001000022b2	retq
00000001000022b3	nopw	%cs:(%rax,%rax)
00000001000022bd	nopl	(%rax)
__ZNSt3__18ios_base5widthEl:
00000001000022c0	pushq	%rbp
00000001000022c1	movq	%rsp, %rbp
00000001000022c4	movq	%rdi, -0x8(%rbp)
00000001000022c8	movq	%rsi, -0x10(%rbp)
00000001000022cc	movq	-0x8(%rbp), %rax
00000001000022d0	movq	0x18(%rax), %rcx
00000001000022d4	movq	%rcx, -0x18(%rbp)
00000001000022d8	movq	-0x10(%rbp), %rcx
00000001000022dc	movq	%rcx, 0x18(%rax)
00000001000022e0	movq	-0x18(%rbp), %rax
00000001000022e4	popq	%rbp
00000001000022e5	retq
00000001000022e6	nopw	%cs:(%rax,%rax)
__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Emc:
00000001000022f0	pushq	%rbp
00000001000022f1	movq	%rsp, %rbp
00000001000022f4	subq	$0x30, %rsp
00000001000022f8	movq	%rdi, -0x8(%rbp)
00000001000022fc	movq	%rsi, -0x10(%rbp)
0000000100002300	movb	%dl, -0x11(%rbp)
0000000100002303	movq	-0x8(%rbp), %rax
0000000100002307	movq	%rax, %rdi
000000010000230a	leaq	-0x18(%rbp), %rsi
000000010000230e	leaq	-0x20(%rbp), %rdx
0000000100002312	movq	%rax, -0x28(%rbp)
0000000100002316	callq	0x100002340
000000010000231b	movq	-0x10(%rbp), %rsi
000000010000231f	movq	-0x28(%rbp), %rdi
0000000100002323	movsbl	-0x11(%rbp), %edx
0000000100002327	callq	0x100003b66
000000010000232c	addq	$0x30, %rsp
0000000100002330	popq	%rbp
0000000100002331	retq
0000000100002332	nopw	%cs:(%rax,%rax)
000000010000233c	nopl	(%rax)
__ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_EC1INS_18__default_init_tagESA_EEOT_OT0_:
0000000100002340	pushq	%rbp
0000000100002341	movq	%rsp, %rbp
0000000100002344	subq	$0x20, %rsp
0000000100002348	movq	%rdi, -0x8(%rbp)
000000010000234c	movq	%rsi, -0x10(%rbp)
0000000100002350	movq	%rdx, -0x18(%rbp)
0000000100002354	movq	-0x8(%rbp), %rdi
0000000100002358	movq	-0x10(%rbp), %rsi
000000010000235c	movq	-0x18(%rbp), %rdx
0000000100002360	callq	0x100002370
0000000100002365	addq	$0x20, %rsp
0000000100002369	popq	%rbp
000000010000236a	retq
000000010000236b	nopl	(%rax,%rax)
__ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_EC2INS_18__default_init_tagESA_EEOT_OT0_:
0000000100002370	pushq	%rbp
0000000100002371	movq	%rsp, %rbp
0000000100002374	subq	$0x50, %rsp
0000000100002378	movq	%rdi, -0x8(%rbp)
000000010000237c	movq	%rsi, -0x10(%rbp)
0000000100002380	movq	%rdx, -0x18(%rbp)
0000000100002384	movq	-0x8(%rbp), %rax
0000000100002388	movq	%rax, %rcx
000000010000238b	movq	-0x10(%rbp), %rdi
000000010000238f	movq	%rax, -0x30(%rbp)
0000000100002393	movq	%rcx, -0x38(%rbp)
0000000100002397	callq	0x1000010f0
000000010000239c	movq	-0x38(%rbp), %rdi
00000001000023a0	movq	%rax, -0x40(%rbp)
00000001000023a4	callq	0x1000023d0
00000001000023a9	movq	-0x30(%rbp), %rax
00000001000023ad	movq	-0x18(%rbp), %rdi
00000001000023b1	movq	%rax, -0x48(%rbp)
00000001000023b5	callq	0x1000010f0
00000001000023ba	movq	-0x48(%rbp), %rdi
00000001000023be	movq	%rax, -0x50(%rbp)
00000001000023c2	callq	0x1000023e0
00000001000023c7	addq	$0x50, %rsp
00000001000023cb	popq	%rbp
00000001000023cc	retq
00000001000023cd	nopl	(%rax)
__ZNSt3__122__compressed_pair_elemINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repELi0ELb0EEC2ENS_18__default_init_tagE:
00000001000023d0	pushq	%rbp
00000001000023d1	movq	%rsp, %rbp
00000001000023d4	movq	%rdi, -0x10(%rbp)
00000001000023d8	popq	%rbp
00000001000023d9	retq
00000001000023da	nopw	(%rax,%rax)
__ZNSt3__122__compressed_pair_elemINS_9allocatorIcEELi1ELb1EEC2ENS_18__default_init_tagE:
00000001000023e0	pushq	%rbp
00000001000023e1	movq	%rsp, %rbp
00000001000023e4	subq	$0x10, %rsp
00000001000023e8	movq	%rdi, -0x10(%rbp)
00000001000023ec	movq	-0x10(%rbp), %rax
00000001000023f0	movq	%rax, %rdi
00000001000023f3	callq	0x100002400
00000001000023f8	addq	$0x10, %rsp
00000001000023fc	popq	%rbp
00000001000023fd	retq
00000001000023fe	nop
__ZNSt3__19allocatorIcEC2Ev:
0000000100002400	pushq	%rbp
0000000100002401	movq	%rsp, %rbp
0000000100002404	movq	%rdi, -0x8(%rbp)
0000000100002408	popq	%rbp
0000000100002409	retq
000000010000240a	nopw	(%rax,%rax)
__ZNSt3__1L12__to_addressIKcEEPT_S3_:
0000000100002410	pushq	%rbp
0000000100002411	movq	%rsp, %rbp
0000000100002414	movq	%rdi, -0x8(%rbp)
0000000100002418	movq	-0x8(%rbp), %rax
000000010000241c	popq	%rbp
000000010000241d	retq
000000010000241e	nop
__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE13__get_pointerEv:
0000000100002420	pushq	%rbp
0000000100002421	movq	%rsp, %rbp
0000000100002424	subq	$0x20, %rsp
0000000100002428	movq	%rdi, -0x8(%rbp)
000000010000242c	movq	-0x8(%rbp), %rax
0000000100002430	movq	%rax, %rdi
0000000100002433	movq	%rax, -0x10(%rbp)
0000000100002437	callq	0x100002480
000000010000243c	testb	$0x1, %al
000000010000243e	jne	0x100002449
0000000100002444	jmp	0x10000245b
0000000100002449	movq	-0x10(%rbp), %rdi
000000010000244d	callq	0x1000024c0
0000000100002452	movq	%rax, -0x18(%rbp)
0000000100002456	jmp	0x100002468
000000010000245b	movq	-0x10(%rbp), %rdi
000000010000245f	callq	0x1000024e0
0000000100002464	movq	%rax, -0x18(%rbp)
0000000100002468	movq	-0x18(%rbp), %rax
000000010000246c	addq	$0x20, %rsp
0000000100002470	popq	%rbp
0000000100002471	retq
0000000100002472	nopw	%cs:(%rax,%rax)
000000010000247c	nopl	(%rax)
__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__is_longEv:
0000000100002480	pushq	%rbp
0000000100002481	movq	%rsp, %rbp
0000000100002484	subq	$0x10, %rsp
0000000100002488	movq	%rdi, -0x8(%rbp)
000000010000248c	movq	-0x8(%rbp), %rdi
0000000100002490	callq	0x100002510
0000000100002495	movzbl	(%rax), %ecx
0000000100002498	movl	%ecx, %eax
000000010000249a	andq	$0x1, %rax
00000001000024a0	cmpq	$0x0, %rax
00000001000024a4	setne	%dl
00000001000024a7	andb	$0x1, %dl
00000001000024aa	movzbl	%dl, %eax
00000001000024ad	addq	$0x10, %rsp
00000001000024b1	popq	%rbp
00000001000024b2	retq
00000001000024b3	nopw	%cs:(%rax,%rax)
00000001000024bd	nopl	(%rax)
__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE18__get_long_pointerEv:
00000001000024c0	pushq	%rbp
00000001000024c1	movq	%rsp, %rbp
00000001000024c4	subq	$0x10, %rsp
00000001000024c8	movq	%rdi, -0x8(%rbp)
00000001000024cc	movq	-0x8(%rbp), %rdi
00000001000024d0	callq	0x100002510
00000001000024d5	movq	0x10(%rax), %rax
00000001000024d9	addq	$0x10, %rsp
00000001000024dd	popq	%rbp
00000001000024de	retq
00000001000024df	nop
__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE19__get_short_pointerEv:
00000001000024e0	pushq	%rbp
00000001000024e1	movq	%rsp, %rbp
00000001000024e4	subq	$0x10, %rsp
00000001000024e8	movq	%rdi, -0x8(%rbp)
00000001000024ec	movq	-0x8(%rbp), %rdi
00000001000024f0	callq	0x100002510
00000001000024f5	addq	$0x1, %rax
00000001000024fb	movq	%rax, %rdi
00000001000024fe	callq	0x100002540
0000000100002503	addq	$0x10, %rsp
0000000100002507	popq	%rbp
0000000100002508	retq
0000000100002509	nopl	(%rax)
__ZNKSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_E5firstEv:
0000000100002510	pushq	%rbp
0000000100002511	movq	%rsp, %rbp
0000000100002514	subq	$0x10, %rsp
0000000100002518	movq	%rdi, -0x8(%rbp)
000000010000251c	movq	-0x8(%rbp), %rax
0000000100002520	movq	%rax, %rdi
0000000100002523	callq	0x100002530
0000000100002528	addq	$0x10, %rsp
000000010000252c	popq	%rbp
000000010000252d	retq
000000010000252e	nop
__ZNKSt3__122__compressed_pair_elemINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repELi0ELb0EE5__getEv:
0000000100002530	pushq	%rbp
0000000100002531	movq	%rsp, %rbp
0000000100002534	movq	%rdi, -0x8(%rbp)
0000000100002538	movq	-0x8(%rbp), %rax
000000010000253c	popq	%rbp
000000010000253d	retq
000000010000253e	nop
__ZNSt3__114pointer_traitsIPKcE10pointer_toERS1_:
0000000100002540	pushq	%rbp
0000000100002541	movq	%rsp, %rbp
0000000100002544	subq	$0x10, %rsp
0000000100002548	movq	%rdi, -0x8(%rbp)
000000010000254c	movq	-0x8(%rbp), %rdi
0000000100002550	callq	0x100002560
0000000100002555	addq	$0x10, %rsp
0000000100002559	popq	%rbp
000000010000255a	retq
000000010000255b	nopl	(%rax,%rax)
__ZNSt3__1L9addressofIKcEEPT_RS2_:
0000000100002560	pushq	%rbp
0000000100002561	movq	%rsp, %rbp
0000000100002564	movq	%rdi, -0x8(%rbp)
0000000100002568	movq	-0x8(%rbp), %rax
000000010000256c	popq	%rbp
000000010000256d	retq
000000010000256e	nop
__ZNSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEEC2ERNS_13basic_ostreamIcS2_EE:
0000000100002570	pushq	%rbp
0000000100002571	movq	%rsp, %rbp
0000000100002574	subq	$0x30, %rsp
0000000100002578	movq	%rdi, -0x8(%rbp)
000000010000257c	movq	%rsi, -0x10(%rbp)
0000000100002580	movq	-0x8(%rbp), %rax
0000000100002584	movq	-0x10(%rbp), %rcx
0000000100002588	movq	(%rcx), %rdx
000000010000258b	movq	-0x18(%rdx), %rdx
000000010000258f	addq	%rdx, %rcx
0000000100002592	movq	%rcx, %rdi
0000000100002595	movq	%rax, -0x18(%rbp)
0000000100002599	callq	0x1000025d0
000000010000259e	movq	%rax, -0x20(%rbp)
00000001000025a2	jmp	0x1000025a7
00000001000025a7	movq	-0x18(%rbp), %rax
00000001000025ab	movq	-0x20(%rbp), %rcx
00000001000025af	movq	%rcx, (%rax)
00000001000025b2	addq	$0x30, %rsp
00000001000025b6	popq	%rbp
00000001000025b7	retq
00000001000025b8	movq	%rax, %rdi
00000001000025bb	movq	%rdx, -0x28(%rbp)
00000001000025bf	callq	0x100001000
00000001000025c4	nopw	%cs:(%rax,%rax)
00000001000025ce	nop
__ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE5rdbufEv:
00000001000025d0	pushq	%rbp
00000001000025d1	movq	%rsp, %rbp
00000001000025d4	subq	$0x10, %rsp
00000001000025d8	movq	%rdi, -0x8(%rbp)
00000001000025dc	movq	-0x8(%rbp), %rax
00000001000025e0	movq	%rax, %rdi
00000001000025e3	callq	0x1000025f0
00000001000025e8	addq	$0x10, %rsp
00000001000025ec	popq	%rbp
00000001000025ed	retq
00000001000025ee	nop
__ZNKSt3__18ios_base5rdbufEv:
00000001000025f0	pushq	%rbp
00000001000025f1	movq	%rsp, %rbp
00000001000025f4	movq	%rdi, -0x8(%rbp)
00000001000025f8	movq	-0x8(%rbp), %rax
00000001000025fc	movq	0x28(%rax), %rax
0000000100002600	popq	%rbp
0000000100002601	retq
0000000100002602	nopw	%cs:(%rax,%rax)
000000010000260c	nopl	(%rax)
__ZNSt3__111char_traitsIcE11eq_int_typeEii:
0000000100002610	pushq	%rbp
0000000100002611	movq	%rsp, %rbp
0000000100002614	movl	%edi, -0x4(%rbp)
0000000100002617	movl	%esi, -0x8(%rbp)
000000010000261a	movl	-0x4(%rbp), %eax
000000010000261d	cmpl	-0x8(%rbp), %eax
0000000100002620	sete	%cl
0000000100002623	andb	$0x1, %cl
0000000100002626	movzbl	%cl, %eax
0000000100002629	popq	%rbp
000000010000262a	retq
000000010000262b	nopl	(%rax,%rax)
__ZNSt3__111char_traitsIcE3eofEv:
0000000100002630	pushq	%rbp
0000000100002631	movq	%rsp, %rbp
0000000100002634	movl	$0xffffffff, %eax       ## imm = 0xFFFFFFFF
0000000100002639	popq	%rbp
000000010000263a	retq
000000010000263b	nopl	(%rax,%rax)
__ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE5widenEc:
0000000100002640	pushq	%rbp
0000000100002641	movq	%rsp, %rbp
0000000100002644	subq	$0x40, %rsp
0000000100002648	movq	%rdi, -0x8(%rbp)
000000010000264c	movb	%sil, -0x9(%rbp)
0000000100002650	movq	-0x8(%rbp), %rsi
0000000100002654	leaq	-0x18(%rbp), %rax
0000000100002658	movq	%rax, %rdi
000000010000265b	movq	%rax, -0x30(%rbp)
000000010000265f	callq	0x100003b48
0000000100002664	movq	-0x30(%rbp), %rdi
0000000100002668	callq	0x1000026c0
000000010000266d	movq	%rax, -0x38(%rbp)
0000000100002671	jmp	0x100002676
0000000100002676	movsbl	-0x9(%rbp), %esi
000000010000267a	movq	-0x38(%rbp), %rdi
000000010000267e	callq	0x1000026f0
0000000100002683	movb	%al, -0x39(%rbp)
0000000100002686	jmp	0x10000268b
000000010000268b	leaq	-0x18(%rbp), %rdi
000000010000268f	callq	0x100003b96
0000000100002694	movb	-0x39(%rbp), %al
0000000100002697	movsbl	%al, %eax
000000010000269a	addq	$0x40, %rsp
000000010000269e	popq	%rbp
000000010000269f	retq
00000001000026a0	movq	%rax, -0x20(%rbp)
00000001000026a4	movl	%edx, -0x24(%rbp)
00000001000026a7	leaq	-0x18(%rbp), %rdi
00000001000026ab	callq	0x100003b96
00000001000026b0	movq	-0x20(%rbp), %rdi
00000001000026b4	callq	0x100003aca
00000001000026b9	ud2
00000001000026bb	nopl	(%rax,%rax)
__ZNSt3__1L9use_facetINS_5ctypeIcEEEERKT_RKNS_6localeE:
00000001000026c0	pushq	%rbp
00000001000026c1	movq	%rsp, %rbp
00000001000026c4	subq	$0x10, %rsp
00000001000026c8	movq	0x1941(%rip), %rsi
00000001000026cf	movq	%rdi, -0x8(%rbp)
00000001000026d3	movq	-0x8(%rbp), %rdi
00000001000026d7	callq	0x100003b3c
00000001000026dc	addq	$0x10, %rsp
00000001000026e0	popq	%rbp
00000001000026e1	retq
00000001000026e2	nopw	%cs:(%rax,%rax)
00000001000026ec	nopl	(%rax)
__ZNKSt3__15ctypeIcE5widenEc:
00000001000026f0	pushq	%rbp
00000001000026f1	movq	%rsp, %rbp
00000001000026f4	subq	$0x10, %rsp
00000001000026f8	movq	%rdi, -0x8(%rbp)
00000001000026fc	movb	%sil, -0x9(%rbp)
0000000100002700	movq	-0x8(%rbp), %rax
0000000100002704	movb	-0x9(%rbp), %cl
0000000100002707	movq	(%rax), %rdx
000000010000270a	movq	%rax, %rdi
000000010000270d	movsbl	%cl, %esi
0000000100002710	callq	*0x38(%rdx)
0000000100002713	movsbl	%al, %eax
0000000100002716	addq	$0x10, %rsp
000000010000271a	popq	%rbp
000000010000271b	retq
000000010000271c	nopl	(%rax)
__ZNSt3__18ios_base8setstateEj:
0000000100002720	pushq	%rbp
0000000100002721	movq	%rsp, %rbp
0000000100002724	subq	$0x10, %rsp
0000000100002728	movq	%rdi, -0x8(%rbp)
000000010000272c	movl	%esi, -0xc(%rbp)
000000010000272f	movq	-0x8(%rbp), %rax
0000000100002733	movl	0x20(%rax), %ecx
0000000100002736	orl	-0xc(%rbp), %ecx
0000000100002739	movq	%rax, %rdi
000000010000273c	movl	%ecx, %esi
000000010000273e	callq	0x100003bae
0000000100002743	addq	$0x10, %rsp
0000000100002747	popq	%rbp
0000000100002748	retq
0000000100002749	nopl	(%rax)
__ZNSt3__16vectorIiNS_9allocatorIiEEE11__make_iterEPi:
0000000100002750	pushq	%rbp
0000000100002751	movq	%rsp, %rbp
0000000100002754	subq	$0x20, %rsp
0000000100002758	movq	%rdi, -0x10(%rbp)
000000010000275c	movq	%rsi, -0x18(%rbp)
0000000100002760	movq	-0x18(%rbp), %rsi
0000000100002764	leaq	-0x8(%rbp), %rdi
0000000100002768	callq	0x100002780
000000010000276d	movq	-0x8(%rbp), %rax
0000000100002771	addq	$0x20, %rsp
0000000100002775	popq	%rbp
0000000100002776	retq
0000000100002777	nopw	(%rax,%rax)
__ZNSt3__111__wrap_iterIPiEC1ES1_:
0000000100002780	pushq	%rbp
0000000100002781	movq	%rsp, %rbp
0000000100002784	subq	$0x10, %rsp
0000000100002788	movq	%rdi, -0x8(%rbp)
000000010000278c	movq	%rsi, -0x10(%rbp)
0000000100002790	movq	-0x8(%rbp), %rdi
0000000100002794	movq	-0x10(%rbp), %rsi
0000000100002798	callq	0x1000027b0
000000010000279d	addq	$0x10, %rsp
00000001000027a1	popq	%rbp
00000001000027a2	retq
00000001000027a3	nopw	%cs:(%rax,%rax)
00000001000027ad	nopl	(%rax)
__ZNSt3__111__wrap_iterIPiEC2ES1_:
00000001000027b0	pushq	%rbp
00000001000027b1	movq	%rsp, %rbp
00000001000027b4	movq	%rdi, -0x8(%rbp)
00000001000027b8	movq	%rsi, -0x10(%rbp)
00000001000027bc	movq	-0x8(%rbp), %rax
00000001000027c0	movq	-0x10(%rbp), %rcx
00000001000027c4	movq	%rcx, (%rax)
00000001000027c7	popq	%rbp
00000001000027c8	retq
00000001000027c9	nopl	(%rax)
__ZNSt3__1eqIPiS1_EEbRKNS_11__wrap_iterIT_EERKNS2_IT0_EE:
00000001000027d0	pushq	%rbp
00000001000027d1	movq	%rsp, %rbp
00000001000027d4	subq	$0x20, %rsp
00000001000027d8	movq	%rdi, -0x8(%rbp)
00000001000027dc	movq	%rsi, -0x10(%rbp)
00000001000027e0	movq	-0x8(%rbp), %rdi
00000001000027e4	callq	0x100002810
00000001000027e9	movq	-0x10(%rbp), %rdi
00000001000027ed	movq	%rax, -0x18(%rbp)
00000001000027f1	callq	0x100002810
00000001000027f6	movq	-0x18(%rbp), %rcx
00000001000027fa	cmpq	%rax, %rcx
00000001000027fd	sete	%dl
0000000100002800	andb	$0x1, %dl
0000000100002803	movzbl	%dl, %eax
0000000100002806	addq	$0x20, %rsp
000000010000280a	popq	%rbp
000000010000280b	retq
000000010000280c	nopl	(%rax)
__ZNKSt3__111__wrap_iterIPiE4baseEv:
0000000100002810	pushq	%rbp
0000000100002811	movq	%rsp, %rbp
0000000100002814	movq	%rdi, -0x8(%rbp)
0000000100002818	movq	-0x8(%rbp), %rax
000000010000281c	movq	(%rax), %rax
000000010000281f	popq	%rbp
0000000100002820	retq
0000000100002821	nopw	%cs:(%rax,%rax)
000000010000282b	nopl	(%rax,%rax)
__ZN2ft3RBTIiNSt3__14lessIiEENS1_9allocatorINS_12RedBlackTreeIiEEEEE6insertEPPS6_S9_i:
0000000100002830	pushq	%rbp
0000000100002831	movq	%rsp, %rbp
0000000100002834	subq	$0x30, %rsp
0000000100002838	movq	%rdi, -0x8(%rbp)
000000010000283c	movq	%rsi, -0x10(%rbp)
0000000100002840	movq	%rdx, -0x18(%rbp)
0000000100002844	movl	%ecx, -0x1c(%rbp)
0000000100002847	movq	-0x8(%rbp), %rax
000000010000284b	movq	-0x10(%rbp), %rdx
000000010000284f	cmpq	$0x0, (%rdx)
0000000100002853	movq	%rax, -0x28(%rbp)
0000000100002857	jne	0x1000028b2
000000010000285d	cmpl	$0x1, -0x1c(%rbp)
0000000100002861	jne	0x100002873
0000000100002867	movq	-0x18(%rbp), %rax
000000010000286b	movq	-0x28(%rbp), %rcx
000000010000286f	movq	%rax, 0x20(%rcx)
0000000100002873	movq	-0x18(%rbp), %rax
0000000100002877	movq	-0x10(%rbp), %rcx
000000010000287b	movq	%rax, (%rcx)
000000010000287e	movl	-0x1c(%rbp), %edx
0000000100002881	movq	-0x18(%rbp), %rax
0000000100002885	movl	%edx, 0x20(%rax)
0000000100002888	cmpl	$0x1, -0x1c(%rbp)
000000010000288c	jne	0x10000289a
0000000100002892	movq	-0x18(%rbp), %rax
0000000100002896	movb	$0x0, 0x24(%rax)
000000010000289a	movq	-0x28(%rbp), %rax
000000010000289e	movq	0x18(%rax), %rcx
00000001000028a2	addq	$0x1, %rcx
00000001000028a9	movq	%rcx, 0x18(%rax)
00000001000028ad	jmp	0x100002b78
00000001000028b2	movq	-0x28(%rbp), %rax
00000001000028b6	addq	$0x10, %rax
00000001000028bc	movq	-0x18(%rbp), %rsi
00000001000028c0	movq	-0x10(%rbp), %rcx
00000001000028c4	movq	(%rcx), %rdx
00000001000028c7	movq	%rax, %rdi
00000001000028ca	callq	0x100001c70
00000001000028cf	testb	$0x1, %al
00000001000028d1	jne	0x1000028dc
00000001000028d7	jmp	0x100002903
00000001000028dc	movq	-0x10(%rbp), %rax
00000001000028e0	movq	(%rax), %rax
00000001000028e3	addq	$0x8, %rax
00000001000028e9	movq	-0x18(%rbp), %rdx
00000001000028ed	movq	-0x28(%rbp), %rdi
00000001000028f1	movq	%rax, %rsi
00000001000028f4	movl	$0x2, %ecx
00000001000028f9	callq	0x100002830
00000001000028fe	jmp	0x10000295e
0000000100002903	movq	-0x28(%rbp), %rax
0000000100002907	addq	$0x10, %rax
000000010000290d	movq	-0x10(%rbp), %rcx
0000000100002911	movq	(%rcx), %rsi
0000000100002914	movq	-0x18(%rbp), %rdx
0000000100002918	movq	%rax, %rdi
000000010000291b	callq	0x100001c70
0000000100002920	testb	$0x1, %al
0000000100002922	jne	0x10000292d
0000000100002928	jmp	0x100002954
000000010000292d	movq	-0x10(%rbp), %rax
0000000100002931	movq	(%rax), %rax
0000000100002934	addq	$0x10, %rax
000000010000293a	movq	-0x18(%rbp), %rdx
000000010000293e	movq	-0x28(%rbp), %rdi
0000000100002942	movq	%rax, %rsi
0000000100002945	movl	$0x3, %ecx
000000010000294a	callq	0x100002830
000000010000294f	jmp	0x100002959
0000000100002954	jmp	0x100002b78
0000000100002959	jmp	0x10000295e
000000010000295e	movq	-0x10(%rbp), %rax
0000000100002962	movq	(%rax), %rax
0000000100002965	cmpq	$0x0, 0x8(%rax)
000000010000296a	je	0x100002986
0000000100002970	movq	-0x10(%rbp), %rax
0000000100002974	movq	(%rax), %rax
0000000100002977	movq	-0x10(%rbp), %rcx
000000010000297b	movq	(%rcx), %rcx
000000010000297e	movq	0x8(%rcx), %rcx
0000000100002982	movq	%rax, 0x18(%rcx)
0000000100002986	movq	-0x10(%rbp), %rax
000000010000298a	movq	(%rax), %rax
000000010000298d	cmpq	$0x0, 0x10(%rax)
0000000100002992	je	0x1000029ae
0000000100002998	movq	-0x10(%rbp), %rax
000000010000299c	movq	(%rax), %rax
000000010000299f	movq	-0x10(%rbp), %rcx
00000001000029a3	movq	(%rcx), %rcx
00000001000029a6	movq	0x10(%rcx), %rcx
00000001000029aa	movq	%rax, 0x18(%rcx)
00000001000029ae	movq	-0x10(%rbp), %rax
00000001000029b2	movq	(%rax), %rax
00000001000029b5	movb	0x24(%rax), %cl
00000001000029b8	andb	$0x1, %cl
00000001000029bb	movzbl	%cl, %edx
00000001000029be	cmpl	$0x0, %edx
00000001000029c1	je	0x100002a25
00000001000029c7	movq	-0x10(%rbp), %rax
00000001000029cb	movq	(%rax), %rax
00000001000029ce	cmpq	$0x0, 0x8(%rax)
00000001000029d3	je	0x1000029f6
00000001000029d9	movq	-0x10(%rbp), %rax
00000001000029dd	movq	(%rax), %rax
00000001000029e0	movq	0x8(%rax), %rax
00000001000029e4	movb	0x24(%rax), %cl
00000001000029e7	andb	$0x1, %cl
00000001000029ea	movzbl	%cl, %edx
00000001000029ed	cmpl	$0x0, %edx
00000001000029f0	jne	0x100002a2a
00000001000029f6	movq	-0x10(%rbp), %rax
00000001000029fa	movq	(%rax), %rax
00000001000029fd	cmpq	$0x0, 0x10(%rax)
0000000100002a02	je	0x100002a25
0000000100002a08	movq	-0x10(%rbp), %rax
0000000100002a0c	movq	(%rax), %rax
0000000100002a0f	movq	0x10(%rax), %rax
0000000100002a13	movb	0x24(%rax), %cl
0000000100002a16	andb	$0x1, %cl
0000000100002a19	movzbl	%cl, %edx
0000000100002a1c	cmpl	$0x0, %edx
0000000100002a1f	jne	0x100002a2a
0000000100002a25	jmp	0x100002b78
0000000100002a2a	movq	-0x10(%rbp), %rax
0000000100002a2e	movq	(%rax), %rax
0000000100002a31	cmpl	$0x3, 0x20(%rax)
0000000100002a35	jne	0x100002adc
0000000100002a3b	movq	-0x10(%rbp), %rax
0000000100002a3f	movq	(%rax), %rax
0000000100002a42	movq	0x18(%rax), %rax
0000000100002a46	cmpq	$0x0, 0x8(%rax)
0000000100002a4b	je	0x100002ab9
0000000100002a51	movq	-0x10(%rbp), %rax
0000000100002a55	movq	(%rax), %rax
0000000100002a58	movq	0x18(%rax), %rax
0000000100002a5c	movq	0x8(%rax), %rax
0000000100002a60	movb	0x24(%rax), %cl
0000000100002a63	andb	$0x1, %cl
0000000100002a66	movzbl	%cl, %edx
0000000100002a69	cmpl	$0x1, %edx
0000000100002a6c	jne	0x100002ab9
0000000100002a72	movq	-0x10(%rbp), %rax
0000000100002a76	movq	(%rax), %rax
0000000100002a79	movq	0x18(%rax), %rax
0000000100002a7d	movq	0x8(%rax), %rax
0000000100002a81	movb	$0x0, 0x24(%rax)
0000000100002a85	movq	-0x10(%rbp), %rax
0000000100002a89	movq	(%rax), %rax
0000000100002a8c	movq	0x18(%rax), %rax
0000000100002a90	cmpl	$0x1, 0x20(%rax)
0000000100002a94	je	0x100002aa9
0000000100002a9a	movq	-0x10(%rbp), %rax
0000000100002a9e	movq	(%rax), %rax
0000000100002aa1	movq	0x18(%rax), %rax
0000000100002aa5	movb	$0x1, 0x24(%rax)
0000000100002aa9	movq	-0x10(%rbp), %rax
0000000100002aad	movq	(%rax), %rax
0000000100002ab0	movb	$0x0, 0x24(%rax)
0000000100002ab4	jmp	0x100002b78
0000000100002ab9	movq	-0x10(%rbp), %rax
0000000100002abd	movq	(%rax), %rax
0000000100002ac0	addq	$0x18, %rax
0000000100002ac6	movq	-0x28(%rbp), %rdi
0000000100002aca	movq	%rax, %rsi
0000000100002acd	movl	$0x3, %edx
0000000100002ad2	callq	0x100003b30
0000000100002ad7	jmp	0x100002b78
0000000100002adc	movq	-0x10(%rbp), %rax
0000000100002ae0	movq	(%rax), %rax
0000000100002ae3	movq	0x18(%rax), %rax
0000000100002ae7	cmpq	$0x0, 0x10(%rax)
0000000100002aec	je	0x100002b5a
0000000100002af2	movq	-0x10(%rbp), %rax
0000000100002af6	movq	(%rax), %rax
0000000100002af9	movq	0x18(%rax), %rax
0000000100002afd	movq	0x10(%rax), %rax
0000000100002b01	movb	0x24(%rax), %cl
0000000100002b04	andb	$0x1, %cl
0000000100002b07	movzbl	%cl, %edx
0000000100002b0a	cmpl	$0x1, %edx
0000000100002b0d	jne	0x100002b5a
0000000100002b13	movq	-0x10(%rbp), %rax
0000000100002b17	movq	(%rax), %rax
0000000100002b1a	movq	0x18(%rax), %rax
0000000100002b1e	movq	0x10(%rax), %rax
0000000100002b22	movb	$0x0, 0x24(%rax)
0000000100002b26	movq	-0x10(%rbp), %rax
0000000100002b2a	movq	(%rax), %rax
0000000100002b2d	movq	0x18(%rax), %rax
0000000100002b31	cmpl	$0x1, 0x20(%rax)
0000000100002b35	je	0x100002b4a
0000000100002b3b	movq	-0x10(%rbp), %rax
0000000100002b3f	movq	(%rax), %rax
0000000100002b42	movq	0x18(%rax), %rax
0000000100002b46	movb	$0x1, 0x24(%rax)
0000000100002b4a	movq	-0x10(%rbp), %rax
0000000100002b4e	movq	(%rax), %rax
0000000100002b51	movb	$0x0, 0x24(%rax)
0000000100002b55	jmp	0x100002b78
0000000100002b5a	movq	-0x10(%rbp), %rax
0000000100002b5e	movq	(%rax), %rax
0000000100002b61	addq	$0x18, %rax
0000000100002b67	movq	-0x28(%rbp), %rdi
0000000100002b6b	movq	%rax, %rsi
0000000100002b6e	movl	$0x2, %edx
0000000100002b73	callq	0x100003b30
0000000100002b78	addq	$0x30, %rsp
0000000100002b7c	popq	%rbp
0000000100002b7d	retq
0000000100002b7e	nop
__ZN2ft3RBTIiNSt3__14lessIiEENS1_9allocatorINS_12RedBlackTreeIiEEEEE7newnodeEi:
0000000100002b80	pushq	%rbp
0000000100002b81	movq	%rsp, %rbp
0000000100002b84	subq	$0x20, %rsp
0000000100002b88	xorl	%eax, %eax
0000000100002b8a	movl	%eax, %edx
0000000100002b8c	movq	%rdi, -0x8(%rbp)
0000000100002b90	movl	%esi, -0xc(%rbp)
0000000100002b93	movq	-0x8(%rbp), %rcx
0000000100002b97	movq	%rcx, %rdi
0000000100002b9a	movl	$0x1, %esi
0000000100002b9f	movq	%rcx, -0x20(%rbp)
0000000100002ba3	callq	0x100003060
0000000100002ba8	movq	%rax, -0x18(%rbp)
0000000100002bac	movq	-0x18(%rbp), %rsi
0000000100002bb0	movq	-0x20(%rbp), %rdi
0000000100002bb4	leaq	-0xc(%rbp), %rdx
0000000100002bb8	callq	0x1000030c0
0000000100002bbd	movq	-0x18(%rbp), %rax
0000000100002bc1	addq	$0x20, %rsp
0000000100002bc5	popq	%rbp
0000000100002bc6	retq
0000000100002bc7	nopw	(%rax,%rax)
__ZN2ft3RBTIiNSt3__14lessIiEENS1_9allocatorINS_12RedBlackTreeIiEEEEE9balancingEPPS6_i:
0000000100002bd0	pushq	%rbp
0000000100002bd1	movq	%rsp, %rbp
0000000100002bd4	subq	$0x20, %rsp
0000000100002bd8	movq	%rdi, -0x8(%rbp)
0000000100002bdc	movq	%rsi, -0x10(%rbp)
0000000100002be0	movl	%edx, -0x14(%rbp)
0000000100002be3	movq	-0x8(%rbp), %rax
0000000100002be7	cmpl	$0x3, -0x14(%rbp)
0000000100002beb	movq	%rax, -0x20(%rbp)
0000000100002bef	jne	0x100002c75
0000000100002bf5	movq	-0x10(%rbp), %rax
0000000100002bf9	movq	(%rax), %rax
0000000100002bfc	movq	0x10(%rax), %rax
0000000100002c00	cmpq	$0x0, 0x10(%rax)
0000000100002c05	je	0x100002c43
0000000100002c0b	movq	-0x10(%rbp), %rax
0000000100002c0f	movq	(%rax), %rax
0000000100002c12	movq	0x10(%rax), %rax
0000000100002c16	movq	0x10(%rax), %rax
0000000100002c1a	movb	0x24(%rax), %cl
0000000100002c1d	andb	$0x1, %cl
0000000100002c20	movzbl	%cl, %edx
0000000100002c23	cmpl	$0x1, %edx
0000000100002c26	jne	0x100002c43
0000000100002c2c	movq	-0x10(%rbp), %rsi
0000000100002c30	movq	-0x20(%rbp), %rdi
0000000100002c34	movl	$0x1, %edx
0000000100002c39	callq	0x100003adc
0000000100002c3e	jmp	0x100002cf0
0000000100002c43	xorl	%edx, %edx
0000000100002c45	movq	-0x10(%rbp), %rax
0000000100002c49	movq	(%rax), %rax
0000000100002c4c	addq	$0x10, %rax
0000000100002c52	movq	-0x20(%rbp), %rdi
0000000100002c56	movq	%rax, %rsi
0000000100002c59	callq	0x100003ae2
0000000100002c5e	movq	-0x10(%rbp), %rsi
0000000100002c62	movq	-0x20(%rbp), %rdi
0000000100002c66	movl	$0x1, %edx
0000000100002c6b	callq	0x100003adc
0000000100002c70	jmp	0x100002cf0
0000000100002c75	movq	-0x10(%rbp), %rax
0000000100002c79	movq	(%rax), %rax
0000000100002c7c	movq	0x8(%rax), %rax
0000000100002c80	cmpq	$0x0, 0x8(%rax)
0000000100002c85	je	0x100002cc3
0000000100002c8b	movq	-0x10(%rbp), %rax
0000000100002c8f	movq	(%rax), %rax
0000000100002c92	movq	0x8(%rax), %rax
0000000100002c96	movq	0x8(%rax), %rax
0000000100002c9a	movb	0x24(%rax), %cl
0000000100002c9d	andb	$0x1, %cl
0000000100002ca0	movzbl	%cl, %edx
0000000100002ca3	cmpl	$0x1, %edx
0000000100002ca6	jne	0x100002cc3
0000000100002cac	movq	-0x10(%rbp), %rsi
0000000100002cb0	movq	-0x20(%rbp), %rdi
0000000100002cb4	movl	$0x1, %edx
0000000100002cb9	callq	0x100003ae2
0000000100002cbe	jmp	0x100002cf0
0000000100002cc3	xorl	%edx, %edx
0000000100002cc5	movq	-0x10(%rbp), %rax
0000000100002cc9	movq	(%rax), %rax
0000000100002ccc	addq	$0x8, %rax
0000000100002cd2	movq	-0x20(%rbp), %rdi
0000000100002cd6	movq	%rax, %rsi
0000000100002cd9	callq	0x100003adc
0000000100002cde	movq	-0x10(%rbp), %rsi
0000000100002ce2	movq	-0x20(%rbp), %rdi
0000000100002ce6	movl	$0x1, %edx
0000000100002ceb	callq	0x100003ae2
0000000100002cf0	addq	$0x20, %rsp
0000000100002cf4	popq	%rbp
0000000100002cf5	retq
0000000100002cf6	nopw	%cs:(%rax,%rax)
__ZN2ft3RBTIiNSt3__14lessIiEENS1_9allocatorINS_12RedBlackTreeIiEEEEE13left_rotationEPPS6_b:
0000000100002d00	pushq	%rbp
0000000100002d01	movq	%rsp, %rbp
0000000100002d04	subq	$0x20, %rsp
0000000100002d08	movq	%rdi, -0x8(%rbp)
0000000100002d0c	movq	%rsi, -0x10(%rbp)
0000000100002d10	andb	$0x1, %dl
0000000100002d13	movb	%dl, -0x11(%rbp)
0000000100002d16	movq	-0x8(%rbp), %rdi
0000000100002d1a	movq	-0x10(%rbp), %rax
0000000100002d1e	movq	(%rax), %rax
0000000100002d21	movq	0x10(%rax), %rsi
0000000100002d25	movq	-0x10(%rbp), %rax
0000000100002d29	movq	(%rax), %rdx
0000000100002d2c	callq	0x100003b24
0000000100002d31	movq	-0x10(%rbp), %rax
0000000100002d35	movq	(%rax), %rax
0000000100002d38	movq	0x10(%rax), %rax
0000000100002d3c	movq	%rax, -0x20(%rbp)
0000000100002d40	movq	-0x10(%rbp), %rax
0000000100002d44	movq	(%rax), %rax
0000000100002d47	movq	0x10(%rax), %rax
0000000100002d4b	movq	0x10(%rax), %rax
0000000100002d4f	movq	-0x10(%rbp), %rcx
0000000100002d53	movq	(%rcx), %rcx
0000000100002d56	movq	%rax, 0x10(%rcx)
0000000100002d5a	movq	-0x10(%rbp), %rax
0000000100002d5e	movq	(%rax), %rax
0000000100002d61	cmpq	$0x0, 0x10(%rax)
0000000100002d66	je	0x100002db2
0000000100002d6c	movq	-0x10(%rbp), %rax
0000000100002d70	movq	(%rax), %rax
0000000100002d73	movq	-0x10(%rbp), %rcx
0000000100002d77	movq	(%rcx), %rcx
0000000100002d7a	movq	0x10(%rcx), %rcx
0000000100002d7e	movq	%rax, 0x18(%rcx)
0000000100002d82	movq	-0x10(%rbp), %rax
0000000100002d86	movq	(%rax), %rax
0000000100002d89	movq	0x10(%rax), %rax
0000000100002d8d	movl	$0x3, 0x20(%rax)
0000000100002d94	testb	$0x1, -0x11(%rbp)
0000000100002d98	je	0x100002dad
0000000100002d9e	movq	-0x10(%rbp), %rax
0000000100002da2	movq	(%rax), %rax
0000000100002da5	movq	0x10(%rax), %rax
0000000100002da9	movb	$0x1, 0x24(%rax)
0000000100002dad	jmp	0x100002db2
0000000100002db2	movq	-0x20(%rbp), %rax
0000000100002db6	movq	0x8(%rax), %rax
0000000100002dba	movq	-0x20(%rbp), %rcx
0000000100002dbe	movq	%rax, 0x10(%rcx)
0000000100002dc2	movq	-0x20(%rbp), %rax
0000000100002dc6	cmpq	$0x0, 0x10(%rax)
0000000100002dcb	je	0x100002df0
0000000100002dd1	movq	-0x20(%rbp), %rax
0000000100002dd5	movq	-0x20(%rbp), %rcx
0000000100002dd9	movq	0x10(%rcx), %rcx
0000000100002ddd	movq	%rax, 0x18(%rcx)
0000000100002de1	movq	-0x20(%rbp), %rax
0000000100002de5	movq	0x10(%rax), %rax
0000000100002de9	movl	$0x3, 0x20(%rax)
0000000100002df0	movq	-0x10(%rbp), %rax
0000000100002df4	movq	(%rax), %rax
0000000100002df7	movq	0x8(%rax), %rax
0000000100002dfb	movq	-0x20(%rbp), %rcx
0000000100002dff	movq	%rax, 0x8(%rcx)
0000000100002e03	movq	-0x20(%rbp), %rax
0000000100002e07	cmpq	$0x0, 0x8(%rax)
0000000100002e0c	je	0x100002e31
0000000100002e12	movq	-0x20(%rbp), %rax
0000000100002e16	movq	0x8(%rax), %rax
0000000100002e1a	movl	$0x2, 0x20(%rax)
0000000100002e21	movq	-0x20(%rbp), %rax
0000000100002e25	movq	-0x20(%rbp), %rcx
0000000100002e29	movq	0x8(%rcx), %rcx
0000000100002e2d	movq	%rax, 0x18(%rcx)
0000000100002e31	movq	-0x20(%rbp), %rax
0000000100002e35	movq	-0x10(%rbp), %rcx
0000000100002e39	movq	(%rcx), %rcx
0000000100002e3c	movq	%rax, 0x8(%rcx)
0000000100002e40	movq	-0x20(%rbp), %rax
0000000100002e44	movl	$0x2, 0x20(%rax)
0000000100002e4b	movq	-0x10(%rbp), %rax
0000000100002e4f	movq	(%rax), %rax
0000000100002e52	movq	-0x20(%rbp), %rcx
0000000100002e56	movq	%rax, 0x18(%rcx)
0000000100002e5a	testb	$0x1, -0x11(%rbp)
0000000100002e5e	je	0x100002e77
0000000100002e64	movq	-0x10(%rbp), %rax
0000000100002e68	movq	(%rax), %rax
0000000100002e6b	movb	$0x0, 0x24(%rax)
0000000100002e6f	movq	-0x20(%rbp), %rax
0000000100002e73	movb	$0x1, 0x24(%rax)
0000000100002e77	addq	$0x20, %rsp
0000000100002e7b	popq	%rbp
0000000100002e7c	retq
0000000100002e7d	nopl	(%rax)
__ZN2ft3RBTIiNSt3__14lessIiEENS1_9allocatorINS_12RedBlackTreeIiEEEEE14right_rotationEPPS6_b:
0000000100002e80	pushq	%rbp
0000000100002e81	movq	%rsp, %rbp
0000000100002e84	subq	$0x20, %rsp
0000000100002e88	movq	%rdi, -0x8(%rbp)
0000000100002e8c	movq	%rsi, -0x10(%rbp)
0000000100002e90	andb	$0x1, %dl
0000000100002e93	movb	%dl, -0x11(%rbp)
0000000100002e96	movq	-0x8(%rbp), %rdi
0000000100002e9a	movq	-0x10(%rbp), %rax
0000000100002e9e	movq	(%rax), %rax
0000000100002ea1	movq	0x8(%rax), %rsi
0000000100002ea5	movq	-0x10(%rbp), %rax
0000000100002ea9	movq	(%rax), %rdx
0000000100002eac	callq	0x100003b24
0000000100002eb1	movq	-0x10(%rbp), %rax
0000000100002eb5	movq	(%rax), %rax
0000000100002eb8	movq	0x8(%rax), %rax
0000000100002ebc	movq	%rax, -0x20(%rbp)
0000000100002ec0	movq	-0x10(%rbp), %rax
0000000100002ec4	movq	(%rax), %rax
0000000100002ec7	movq	0x8(%rax), %rax
0000000100002ecb	movq	0x8(%rax), %rax
0000000100002ecf	movq	-0x10(%rbp), %rcx
0000000100002ed3	movq	(%rcx), %rcx
0000000100002ed6	movq	%rax, 0x8(%rcx)
0000000100002eda	movq	-0x10(%rbp), %rax
0000000100002ede	movq	(%rax), %rax
0000000100002ee1	cmpq	$0x0, 0x8(%rax)
0000000100002ee6	je	0x100002f20
0000000100002eec	movq	-0x10(%rbp), %rax
0000000100002ef0	movq	(%rax), %rax
0000000100002ef3	movq	-0x10(%rbp), %rcx
0000000100002ef7	movq	(%rcx), %rcx
0000000100002efa	movq	0x8(%rcx), %rcx
0000000100002efe	movq	%rax, 0x18(%rcx)
0000000100002f02	testb	$0x1, -0x11(%rbp)
0000000100002f06	je	0x100002f1b
0000000100002f0c	movq	-0x10(%rbp), %rax
0000000100002f10	movq	(%rax), %rax
0000000100002f13	movq	0x8(%rax), %rax
0000000100002f17	movb	$0x1, 0x24(%rax)
0000000100002f1b	jmp	0x100002f20
0000000100002f20	movq	-0x20(%rbp), %rax
0000000100002f24	movq	0x10(%rax), %rax
0000000100002f28	movq	-0x20(%rbp), %rcx
0000000100002f2c	movq	%rax, 0x8(%rcx)
0000000100002f30	movq	-0x20(%rbp), %rax
0000000100002f34	cmpq	$0x0, 0x8(%rax)
0000000100002f39	je	0x100002f5e
0000000100002f3f	movq	-0x20(%rbp), %rax
0000000100002f43	movq	-0x20(%rbp), %rcx
0000000100002f47	movq	0x8(%rcx), %rcx
0000000100002f4b	movq	%rax, 0x18(%rcx)
0000000100002f4f	movq	-0x20(%rbp), %rax
0000000100002f53	movq	0x8(%rax), %rax
0000000100002f57	movl	$0x2, 0x20(%rax)
0000000100002f5e	movq	-0x10(%rbp), %rax
0000000100002f62	movq	(%rax), %rax
0000000100002f65	movq	0x10(%rax), %rax
0000000100002f69	movq	-0x20(%rbp), %rcx
0000000100002f6d	movq	%rax, 0x10(%rcx)
0000000100002f71	movq	-0x20(%rbp), %rax
0000000100002f75	cmpq	$0x0, 0x10(%rax)
0000000100002f7a	je	0x100002f9f
0000000100002f80	movq	-0x20(%rbp), %rax
0000000100002f84	movq	0x10(%rax), %rax
0000000100002f88	movl	$0x3, 0x20(%rax)
0000000100002f8f	movq	-0x20(%rbp), %rax
0000000100002f93	movq	-0x20(%rbp), %rcx
0000000100002f97	movq	0x10(%rcx), %rcx
0000000100002f9b	movq	%rax, 0x18(%rcx)
0000000100002f9f	movq	-0x20(%rbp), %rax
0000000100002fa3	movq	-0x10(%rbp), %rcx
0000000100002fa7	movq	(%rcx), %rcx
0000000100002faa	movq	%rax, 0x10(%rcx)
0000000100002fae	movq	-0x20(%rbp), %rax
0000000100002fb2	movl	$0x3, 0x20(%rax)
0000000100002fb9	movq	-0x10(%rbp), %rax
0000000100002fbd	movq	(%rax), %rax
0000000100002fc0	movq	-0x20(%rbp), %rcx
0000000100002fc4	movq	%rax, 0x18(%rcx)
0000000100002fc8	testb	$0x1, -0x11(%rbp)
0000000100002fcc	je	0x100002fe5
0000000100002fd2	movq	-0x10(%rbp), %rax
0000000100002fd6	movq	(%rax), %rax
0000000100002fd9	movb	$0x0, 0x24(%rax)
0000000100002fdd	movq	-0x20(%rbp), %rax
0000000100002fe1	movb	$0x1, 0x24(%rax)
0000000100002fe5	addq	$0x20, %rsp
0000000100002fe9	popq	%rbp
0000000100002fea	retq
0000000100002feb	nopl	(%rax,%rax)
__ZN2ft3RBTIiNSt3__14lessIiEENS1_9allocatorINS_12RedBlackTreeIiEEEEE7swapingEPS6_S9_:
0000000100002ff0	pushq	%rbp
0000000100002ff1	movq	%rsp, %rbp
0000000100002ff4	movq	%rdi, -0x8(%rbp)
0000000100002ff8	movq	%rsi, -0x10(%rbp)
0000000100002ffc	movq	%rdx, -0x18(%rbp)
0000000100003000	movq	-0x10(%rbp), %rax
0000000100003004	movl	(%rax), %ecx
0000000100003006	movl	%ecx, -0x1c(%rbp)
0000000100003009	movq	-0x10(%rbp), %rax
000000010000300d	movb	0x24(%rax), %r8b
0000000100003011	andb	$0x1, %r8b
0000000100003015	movzbl	%r8b, %ecx
0000000100003019	movl	%ecx, -0x20(%rbp)
000000010000301c	movq	-0x18(%rbp), %rax
0000000100003020	movl	(%rax), %ecx
0000000100003022	movq	-0x10(%rbp), %rax
0000000100003026	movl	%ecx, (%rax)
0000000100003028	movq	-0x18(%rbp), %rax
000000010000302c	movb	0x24(%rax), %r8b
0000000100003030	movq	-0x10(%rbp), %rax
0000000100003034	andb	$0x1, %r8b
0000000100003038	movb	%r8b, 0x24(%rax)
000000010000303c	movl	-0x1c(%rbp), %ecx
000000010000303f	movq	-0x18(%rbp), %rax
0000000100003043	movl	%ecx, (%rax)
0000000100003045	cmpl	$0x0, -0x20(%rbp)
0000000100003049	setne	%r8b
000000010000304d	movq	-0x18(%rbp), %rax
0000000100003051	andb	$0x1, %r8b
0000000100003055	movb	%r8b, 0x24(%rax)
0000000100003059	popq	%rbp
000000010000305a	retq
000000010000305b	nopl	(%rax,%rax)
__ZNSt3__19allocatorIN2ft12RedBlackTreeIiEEE8allocateEmPKv:
0000000100003060	pushq	%rbp
0000000100003061	movq	%rsp, %rbp
0000000100003064	subq	$0x20, %rsp
0000000100003068	movq	%rdi, -0x8(%rbp)
000000010000306c	movq	%rsi, -0x10(%rbp)
0000000100003070	movq	%rdx, -0x18(%rbp)
0000000100003074	movq	-0x8(%rbp), %rdi
0000000100003078	movq	-0x10(%rbp), %rax
000000010000307c	movq	%rax, -0x20(%rbp)
0000000100003080	callq	0x100003100
0000000100003085	movq	-0x20(%rbp), %rcx
0000000100003089	cmpq	%rax, %rcx
000000010000308c	jbe	0x10000309e
0000000100003092	leaq	0xdf9(%rip), %rdi
0000000100003099	callq	0x1000014b0
000000010000309e	imulq	$0x28, -0x10(%rbp), %rdi
00000001000030a6	movl	$0x8, %esi
00000001000030ab	callq	0x100001510
00000001000030b0	addq	$0x20, %rsp
00000001000030b4	popq	%rbp
00000001000030b5	retq
00000001000030b6	nopw	%cs:(%rax,%rax)
__ZNSt3__19allocatorIN2ft12RedBlackTreeIiEEE9constructIS3_JRiEEEvPT_DpOT0_:
00000001000030c0	pushq	%rbp
00000001000030c1	movq	%rsp, %rbp
00000001000030c4	subq	$0x20, %rsp
00000001000030c8	movq	%rdi, -0x8(%rbp)
00000001000030cc	movq	%rsi, -0x10(%rbp)
00000001000030d0	movq	%rdx, -0x18(%rbp)
00000001000030d4	movq	-0x10(%rbp), %rax
00000001000030d8	movq	-0x18(%rbp), %rdi
00000001000030dc	movq	%rax, -0x20(%rbp)
00000001000030e0	callq	0x100003120
00000001000030e5	movl	(%rax), %esi
00000001000030e7	movq	-0x20(%rbp), %rdi
00000001000030eb	callq	0x100003130
00000001000030f0	addq	$0x20, %rsp
00000001000030f4	popq	%rbp
00000001000030f5	retq
00000001000030f6	nopw	%cs:(%rax,%rax)
__ZNKSt3__19allocatorIN2ft12RedBlackTreeIiEEE8max_sizeEv:
0000000100003100	pushq	%rbp
0000000100003101	movq	%rsp, %rbp
0000000100003104	movq	%rdi, -0x8(%rbp)
0000000100003108	movabsq	$0x666666666666666, %rax ## imm = 0x666666666666666
0000000100003112	popq	%rbp
0000000100003113	retq
0000000100003114	nopw	%cs:(%rax,%rax)
000000010000311e	nop
__ZNSt3__1L7forwardIRiEEOT_RNS_16remove_referenceIS2_E4typeE:
0000000100003120	pushq	%rbp
0000000100003121	movq	%rsp, %rbp
0000000100003124	movq	%rdi, -0x8(%rbp)
0000000100003128	movq	-0x8(%rbp), %rax
000000010000312c	popq	%rbp
000000010000312d	retq
000000010000312e	nop
__ZN2ft12RedBlackTreeIiEC1Ei:
0000000100003130	pushq	%rbp
0000000100003131	movq	%rsp, %rbp
0000000100003134	subq	$0x10, %rsp
0000000100003138	movq	%rdi, -0x8(%rbp)
000000010000313c	movl	%esi, -0xc(%rbp)
000000010000313f	movq	-0x8(%rbp), %rdi
0000000100003143	movl	-0xc(%rbp), %esi
0000000100003146	callq	0x100003160
000000010000314b	addq	$0x10, %rsp
000000010000314f	popq	%rbp
0000000100003150	retq
0000000100003151	nopw	%cs:(%rax,%rax)
000000010000315b	nopl	(%rax,%rax)
__ZN2ft12RedBlackTreeIiEC2Ei:
0000000100003160	pushq	%rbp
0000000100003161	movq	%rsp, %rbp
0000000100003164	movq	%rdi, -0x8(%rbp)
0000000100003168	movl	%esi, -0xc(%rbp)
000000010000316b	movq	-0x8(%rbp), %rax
000000010000316f	movl	-0xc(%rbp), %ecx
0000000100003172	movl	%ecx, (%rax)
0000000100003174	movq	$0x0, 0x8(%rax)
000000010000317c	movq	$0x0, 0x10(%rax)
0000000100003184	movq	$0x0, 0x18(%rax)
000000010000318c	movb	$0x1, 0x24(%rax)
0000000100003190	popq	%rbp
0000000100003191	retq
0000000100003192	nopw	%cs:(%rax,%rax)
000000010000319c	nopl	(%rax)
__ZN2ft3RBTIiNSt3__14lessIiEENS1_9allocatorINS_12RedBlackTreeIiEEEEE6removeEPPS6_i:
00000001000031a0	pushq	%rbp
00000001000031a1	movq	%rsp, %rbp
00000001000031a4	subq	$0x40, %rsp
00000001000031a8	movq	%rdi, -0x8(%rbp)
00000001000031ac	movq	%rsi, -0x10(%rbp)
00000001000031b0	movl	%edx, -0x14(%rbp)
00000001000031b3	movq	-0x8(%rbp), %rax
00000001000031b7	movq	-0x10(%rbp), %rcx
00000001000031bb	cmpq	$0x0, (%rcx)
00000001000031bf	movq	%rax, -0x40(%rbp)
00000001000031c3	jne	0x1000031ce
00000001000031c9	jmp	0x1000033b4
00000001000031ce	movq	-0x40(%rbp), %rax
00000001000031d2	addq	$0x10, %rax
00000001000031d8	movq	-0x10(%rbp), %rcx
00000001000031dc	movq	(%rcx), %rdx
00000001000031df	movq	%rax, %rdi
00000001000031e2	leaq	-0x14(%rbp), %rsi
00000001000031e6	callq	0x100001c70
00000001000031eb	testb	$0x1, %al
00000001000031ed	jne	0x1000031f8
00000001000031f3	jmp	0x100003219
00000001000031f8	movq	-0x10(%rbp), %rax
00000001000031fc	movq	(%rax), %rax
00000001000031ff	addq	$0x8, %rax
0000000100003205	movl	-0x14(%rbp), %edx
0000000100003208	movq	-0x40(%rbp), %rdi
000000010000320c	movq	%rax, %rsi
000000010000320f	callq	0x1000031a0
0000000100003214	jmp	0x1000033b4
0000000100003219	movq	-0x40(%rbp), %rax
000000010000321d	addq	$0x10, %rax
0000000100003223	movq	-0x10(%rbp), %rcx
0000000100003227	movq	(%rcx), %rsi
000000010000322a	movq	%rax, %rdi
000000010000322d	leaq	-0x14(%rbp), %rdx
0000000100003231	callq	0x100001c70
0000000100003236	testb	$0x1, %al
0000000100003238	jne	0x100003243
000000010000323e	jmp	0x100003264
0000000100003243	movq	-0x10(%rbp), %rax
0000000100003247	movq	(%rax), %rax
000000010000324a	addq	$0x10, %rax
0000000100003250	movl	-0x14(%rbp), %edx
0000000100003253	movq	-0x40(%rbp), %rdi
0000000100003257	movq	%rax, %rsi
000000010000325a	callq	0x1000031a0
000000010000325f	jmp	0x1000033af
0000000100003264	movq	-0x10(%rbp), %rax
0000000100003268	movq	(%rax), %rax
000000010000326b	movq	%rax, -0x20(%rbp)
000000010000326f	movq	-0x20(%rbp), %rax
0000000100003273	cmpq	$0x0, 0x8(%rax)
0000000100003278	jne	0x100003329
000000010000327e	movq	-0x20(%rbp), %rax
0000000100003282	cmpq	$0x0, 0x10(%rax)
0000000100003287	jne	0x100003329
000000010000328d	movq	-0x20(%rbp), %rax
0000000100003291	movb	0x24(%rax), %cl
0000000100003294	andb	$0x1, %cl
0000000100003297	movb	%cl, -0x21(%rbp)
000000010000329a	movq	-0x20(%rbp), %rax
000000010000329e	movl	0x20(%rax), %edx
00000001000032a1	movl	%edx, -0x28(%rbp)
00000001000032a4	movq	-0x10(%rbp), %rax
00000001000032a8	movq	(%rax), %rax
00000001000032ab	movq	0x18(%rax), %rax
00000001000032af	movq	%rax, -0x30(%rbp)
00000001000032b3	movq	-0x10(%rbp), %rax
00000001000032b7	movq	(%rax), %rsi
00000001000032ba	movq	-0x40(%rbp), %rdi
00000001000032be	callq	0x1000033c0
00000001000032c3	movq	-0x10(%rbp), %rax
00000001000032c7	movq	(%rax), %rsi
00000001000032ca	movq	-0x40(%rbp), %rdi
00000001000032ce	movl	$0x1, %edx
00000001000032d3	callq	0x1000033d0
00000001000032d8	movq	-0x10(%rbp), %rax
00000001000032dc	movq	$0x0, (%rax)
00000001000032e3	movb	-0x21(%rbp), %cl
00000001000032e6	andb	$0x1, %cl
00000001000032e9	movzbl	%cl, %r8d
00000001000032ed	cmpl	$0x0, %r8d
00000001000032f1	jne	0x100003311
00000001000032f7	cmpl	$0x1, -0x28(%rbp)
00000001000032fb	je	0x100003311
0000000100003301	movl	-0x28(%rbp), %edx
0000000100003304	movq	-0x40(%rbp), %rdi
0000000100003308	leaq	-0x30(%rbp), %rsi
000000010000330c	callq	0x100003ae8
0000000100003311	movq	-0x40(%rbp), %rax
0000000100003315	movq	0x18(%rax), %rcx
0000000100003319	addq	$-0x1, %rcx
0000000100003320	movq	%rcx, 0x18(%rax)
0000000100003324	jmp	0x1000033b4
0000000100003329	movq	-0x20(%rbp), %rax
000000010000332d	cmpq	$0x0, 0x8(%rax)
0000000100003332	jne	0x100003372
0000000100003338	movq	-0x20(%rbp), %rax
000000010000333c	movq	0x10(%rax), %rax
0000000100003340	movl	(%rax), %ecx
0000000100003342	movl	%ecx, -0x34(%rbp)
0000000100003345	movl	-0x34(%rbp), %ecx
0000000100003348	movq	-0x10(%rbp), %rax
000000010000334c	movq	(%rax), %rax
000000010000334f	movl	%ecx, (%rax)
0000000100003351	movq	-0x10(%rbp), %rax
0000000100003355	movq	(%rax), %rax
0000000100003358	addq	$0x10, %rax
000000010000335e	movl	-0x34(%rbp), %edx
0000000100003361	movq	-0x40(%rbp), %rdi
0000000100003365	movq	%rax, %rsi
0000000100003368	callq	0x1000031a0
000000010000336d	jmp	0x1000033b4
0000000100003372	movq	-0x20(%rbp), %rax
0000000100003376	movq	0x8(%rax), %rsi
000000010000337a	movq	-0x40(%rbp), %rdi
000000010000337e	callq	0x100003ad0
0000000100003383	movl	%eax, -0x38(%rbp)
0000000100003386	movl	-0x38(%rbp), %eax
0000000100003389	movq	-0x10(%rbp), %rcx
000000010000338d	movq	(%rcx), %rcx
0000000100003390	movl	%eax, (%rcx)
0000000100003392	movq	-0x10(%rbp), %rcx
0000000100003396	movq	(%rcx), %rcx
0000000100003399	addq	$0x8, %rcx
00000001000033a0	movl	-0x38(%rbp), %edx
00000001000033a3	movq	-0x40(%rbp), %rdi
00000001000033a7	movq	%rcx, %rsi
00000001000033aa	callq	0x1000031a0
00000001000033af	jmp	0x1000033b4
00000001000033b4	addq	$0x40, %rsp
00000001000033b8	popq	%rbp
00000001000033b9	retq
00000001000033ba	nopw	(%rax,%rax)
__ZNSt3__19allocatorIN2ft12RedBlackTreeIiEEE7destroyEPS3_:
00000001000033c0	pushq	%rbp
00000001000033c1	movq	%rsp, %rbp
00000001000033c4	movq	%rdi, -0x8(%rbp)
00000001000033c8	movq	%rsi, -0x10(%rbp)
00000001000033cc	popq	%rbp
00000001000033cd	retq
00000001000033ce	nop
__ZNSt3__19allocatorIN2ft12RedBlackTreeIiEEE10deallocateEPS3_m:
00000001000033d0	pushq	%rbp
00000001000033d1	movq	%rsp, %rbp
00000001000033d4	subq	$0x20, %rsp
00000001000033d8	movq	%rdi, -0x8(%rbp)
00000001000033dc	movq	%rsi, -0x10(%rbp)
00000001000033e0	movq	%rdx, -0x18(%rbp)
00000001000033e4	movq	-0x10(%rbp), %rdi
00000001000033e8	movq	-0x18(%rbp), %rax
00000001000033ec	shlq	$0x3, %rax
00000001000033f0	leaq	(%rax,%rax,4), %rsi
00000001000033f4	movl	$0x8, %edx
00000001000033f9	callq	0x1000019f0
00000001000033fe	jmp	0x100003403
0000000100003403	addq	$0x20, %rsp
0000000100003407	popq	%rbp
0000000100003408	retq
0000000100003409	movq	%rax, %rdi
000000010000340c	movq	%rdx, -0x20(%rbp)
0000000100003410	callq	0x100001000
0000000100003415	nopw	%cs:(%rax,%rax)
000000010000341f	nop
__ZN2ft3RBTIiNSt3__14lessIiEENS1_9allocatorINS_12RedBlackTreeIiEEEEE16fix_double_blackEPPS6_i:
0000000100003420	pushq	%rbp
0000000100003421	movq	%rsp, %rbp
0000000100003424	subq	$0x20, %rsp
0000000100003428	movq	%rdi, -0x8(%rbp)
000000010000342c	movq	%rsi, -0x10(%rbp)
0000000100003430	movl	%edx, -0x14(%rbp)
0000000100003433	movq	-0x8(%rbp), %rax
0000000100003437	cmpl	$0x3, -0x14(%rbp)
000000010000343b	movq	%rax, -0x20(%rbp)
000000010000343f	jne	0x100003468
0000000100003445	movq	-0x10(%rbp), %rax
0000000100003449	movq	(%rax), %rax
000000010000344c	addq	$0x8, %rax
0000000100003452	movq	-0x20(%rbp), %rdi
0000000100003456	movq	%rax, %rsi
0000000100003459	movl	$0x3, %edx
000000010000345e	callq	0x100003b2a
0000000100003463	jmp	0x100003490
0000000100003468	cmpl	$0x2, -0x14(%rbp)
000000010000346c	jne	0x100003490
0000000100003472	movq	-0x10(%rbp), %rax
0000000100003476	movq	(%rax), %rax
0000000100003479	addq	$0x10, %rax
000000010000347f	movq	-0x20(%rbp), %rdi
0000000100003483	movq	%rax, %rsi
0000000100003486	movl	$0x2, %edx
000000010000348b	callq	0x100003b2a
0000000100003490	addq	$0x20, %rsp
0000000100003494	popq	%rbp
0000000100003495	retq
0000000100003496	nopw	%cs:(%rax,%rax)
__ZN2ft3RBTIiNSt3__14lessIiEENS1_9allocatorINS_12RedBlackTreeIiEEEEE10thedeepestEPS6_:
00000001000034a0	pushq	%rbp
00000001000034a1	movq	%rsp, %rbp
00000001000034a4	subq	$0x20, %rsp
00000001000034a8	movq	%rdi, -0x10(%rbp)
00000001000034ac	movq	%rsi, -0x18(%rbp)
00000001000034b0	movq	-0x10(%rbp), %rdi
00000001000034b4	movq	-0x18(%rbp), %rax
00000001000034b8	cmpq	$0x0, 0x10(%rax)
00000001000034bd	movq	%rdi, -0x20(%rbp)
00000001000034c1	jne	0x1000034d5
00000001000034c7	movq	-0x18(%rbp), %rax
00000001000034cb	movl	(%rax), %ecx
00000001000034cd	movl	%ecx, -0x4(%rbp)
00000001000034d0	jmp	0x1000034e9
00000001000034d5	movq	-0x18(%rbp), %rax
00000001000034d9	movq	0x10(%rax), %rsi
00000001000034dd	movq	-0x20(%rbp), %rdi
00000001000034e1	callq	0x1000034a0
00000001000034e6	movl	%eax, -0x4(%rbp)
00000001000034e9	movl	-0x4(%rbp), %eax
00000001000034ec	addq	$0x20, %rsp
00000001000034f0	popq	%rbp
00000001000034f1	retq
00000001000034f2	nopw	%cs:(%rax,%rax)
00000001000034fc	nopl	(%rax)
__ZN2ft3RBTIiNSt3__14lessIiEENS1_9allocatorINS_12RedBlackTreeIiEEEEE8fix_caseEPPS6_i:
0000000100003500	pushq	%rbp
0000000100003501	movq	%rsp, %rbp
0000000100003504	subq	$0x20, %rsp
0000000100003508	movq	%rdi, -0x8(%rbp)
000000010000350c	movq	%rsi, -0x10(%rbp)
0000000100003510	movl	%edx, -0x14(%rbp)
0000000100003513	movq	-0x8(%rbp), %rax
0000000100003517	movq	-0x10(%rbp), %rcx
000000010000351b	movq	(%rcx), %rsi
000000010000351e	movl	-0x14(%rbp), %edx
0000000100003521	movq	%rax, %rdi
0000000100003524	movq	%rax, -0x20(%rbp)
0000000100003528	callq	0x100003b0c
000000010000352d	cmpq	$0x0, %rax
0000000100003531	je	0x10000355c
0000000100003537	movq	-0x10(%rbp), %rax
000000010000353b	movq	(%rax), %rsi
000000010000353e	movl	-0x14(%rbp), %edx
0000000100003541	movq	-0x20(%rbp), %rdi
0000000100003545	callq	0x100003b0c
000000010000354a	movb	0x24(%rax), %cl
000000010000354d	andb	$0x1, %cl
0000000100003550	movzbl	%cl, %edx
0000000100003553	cmpl	$0x1, %edx
0000000100003556	je	0x10000359e
000000010000355c	movq	-0x10(%rbp), %rax
0000000100003560	movq	(%rax), %rsi
0000000100003563	movl	-0x14(%rbp), %edx
0000000100003566	movq	-0x20(%rbp), %rdi
000000010000356a	callq	0x100003afa
000000010000356f	cmpq	$0x0, %rax
0000000100003573	je	0x1000035cb
0000000100003579	movq	-0x10(%rbp), %rax
000000010000357d	movq	(%rax), %rsi
0000000100003580	movl	-0x14(%rbp), %edx
0000000100003583	movq	-0x20(%rbp), %rdi
0000000100003587	callq	0x100003afa
000000010000358c	movb	0x24(%rax), %cl
000000010000358f	andb	$0x1, %cl
0000000100003592	movzbl	%cl, %edx
0000000100003595	cmpl	$0x1, %edx
0000000100003598	jne	0x1000035cb
000000010000359e	movq	-0x10(%rbp), %rax
00000001000035a2	movq	(%rax), %rax
00000001000035a5	addq	$0x18, %rax
00000001000035ab	movq	-0x10(%rbp), %rcx
00000001000035af	movq	(%rcx), %rcx
00000001000035b2	movl	0x20(%rcx), %edx
00000001000035b5	movq	-0x20(%rbp), %rdi
00000001000035b9	movq	%rax, %rsi
00000001000035bc	movl	$0x1, %ecx
00000001000035c1	callq	0x100003aee
00000001000035c6	jmp	0x1000036fb
00000001000035cb	movq	-0x10(%rbp), %rax
00000001000035cf	movq	(%rax), %rax
00000001000035d2	movb	0x24(%rax), %cl
00000001000035d5	andb	$0x1, %cl
00000001000035d8	movzbl	%cl, %edx
00000001000035db	cmpl	$0x0, %edx
00000001000035de	jne	0x100003650
00000001000035e4	movq	-0x10(%rbp), %rax
00000001000035e8	movq	(%rax), %rax
00000001000035eb	movb	$0x1, 0x24(%rax)
00000001000035ef	movq	-0x10(%rbp), %rax
00000001000035f3	movq	(%rax), %rax
00000001000035f6	movq	0x18(%rax), %rax
00000001000035fa	movb	0x24(%rax), %cl
00000001000035fd	andb	$0x1, %cl
0000000100003600	movzbl	%cl, %edx
0000000100003603	cmpl	$0x0, %edx
0000000100003606	je	0x100003620
000000010000360c	movq	-0x10(%rbp), %rax
0000000100003610	movq	(%rax), %rax
0000000100003613	movq	0x18(%rax), %rax
0000000100003617	movb	$0x0, 0x24(%rax)
000000010000361b	jmp	0x10000364b
0000000100003620	movq	-0x10(%rbp), %rax
0000000100003624	movq	(%rax), %rax
0000000100003627	movq	0x18(%rax), %rax
000000010000362b	addq	$0x18, %rax
0000000100003631	movq	-0x10(%rbp), %rcx
0000000100003635	movq	(%rcx), %rcx
0000000100003638	movq	0x18(%rcx), %rcx
000000010000363c	movl	0x20(%rcx), %edx
000000010000363f	movq	-0x20(%rbp), %rdi
0000000100003643	movq	%rax, %rsi
0000000100003646	callq	0x100003ae8
000000010000364b	jmp	0x1000036fb
0000000100003650	movq	-0x10(%rbp), %rax
0000000100003654	movq	(%rax), %rax
0000000100003657	movb	0x24(%rax), %cl
000000010000365a	andb	$0x1, %cl
000000010000365d	movzbl	%cl, %edx
0000000100003660	cmpl	$0x1, %edx
0000000100003663	jne	0x1000036fb
0000000100003669	xorl	%ecx, %ecx
000000010000366b	movq	-0x10(%rbp), %rax
000000010000366f	movq	(%rax), %rax
0000000100003672	movq	0x18(%rax), %rax
0000000100003676	movb	$0x1, 0x24(%rax)
000000010000367a	movq	-0x10(%rbp), %rax
000000010000367e	movq	(%rax), %rax
0000000100003681	movb	$0x0, 0x24(%rax)
0000000100003685	movq	-0x10(%rbp), %rax
0000000100003689	movq	(%rax), %rax
000000010000368c	addq	$0x18, %rax
0000000100003692	movq	-0x10(%rbp), %rdx
0000000100003696	movq	(%rdx), %rdx
0000000100003699	movl	0x20(%rdx), %edx
000000010000369c	movq	-0x20(%rbp), %rdi
00000001000036a0	movq	%rax, %rsi
00000001000036a3	callq	0x100003aee
00000001000036a8	cmpl	$0x2, -0x14(%rbp)
00000001000036ac	jne	0x1000036d9
00000001000036b2	movq	-0x10(%rbp), %rax
00000001000036b6	movq	(%rax), %rax
00000001000036b9	movq	0x18(%rax), %rax
00000001000036bd	addq	$0x8, %rax
00000001000036c3	movq	-0x20(%rbp), %rdi
00000001000036c7	movq	%rax, %rsi
00000001000036ca	movl	$0x2, %edx
00000001000036cf	callq	0x100003ae8
00000001000036d4	jmp	0x1000036fb
00000001000036d9	movq	-0x10(%rbp), %rax
00000001000036dd	movq	(%rax), %rax
00000001000036e0	movq	0x18(%rax), %rax
00000001000036e4	addq	$0x10, %rax
00000001000036ea	movq	-0x20(%rbp), %rdi
00000001000036ee	movq	%rax, %rsi
00000001000036f1	movl	$0x3, %edx
00000001000036f6	callq	0x100003ae8
00000001000036fb	addq	$0x20, %rsp
00000001000036ff	popq	%rbp
0000000100003700	retq
0000000100003701	nopw	%cs:(%rax,%rax)
000000010000370b	nopl	(%rax,%rax)
__ZN2ft3RBTIiNSt3__14lessIiEENS1_9allocatorINS_12RedBlackTreeIiEEEEE6nephewEPS6_i:
0000000100003710	pushq	%rbp
0000000100003711	movq	%rsp, %rbp
0000000100003714	movq	%rdi, -0x10(%rbp)
0000000100003718	movq	%rsi, -0x18(%rbp)
000000010000371c	movl	%edx, -0x1c(%rbp)
000000010000371f	cmpl	$0x2, -0x1c(%rbp)
0000000100003723	jne	0x10000373a
0000000100003729	movq	-0x18(%rbp), %rax
000000010000372d	movq	0x10(%rax), %rax
0000000100003731	movq	%rax, -0x8(%rbp)
0000000100003735	jmp	0x100003746
000000010000373a	movq	-0x18(%rbp), %rax
000000010000373e	movq	0x8(%rax), %rax
0000000100003742	movq	%rax, -0x8(%rbp)
0000000100003746	movq	-0x8(%rbp), %rax
000000010000374a	popq	%rbp
000000010000374b	retq
000000010000374c	nopl	(%rax)
__ZN2ft3RBTIiNSt3__14lessIiEENS1_9allocatorINS_12RedBlackTreeIiEEEEE5nieceEPS6_i:
0000000100003750	pushq	%rbp
0000000100003751	movq	%rsp, %rbp
0000000100003754	movq	%rdi, -0x10(%rbp)
0000000100003758	movq	%rsi, -0x18(%rbp)
000000010000375c	movl	%edx, -0x1c(%rbp)
000000010000375f	cmpl	$0x2, -0x1c(%rbp)
0000000100003763	jne	0x10000377a
0000000100003769	movq	-0x18(%rbp), %rax
000000010000376d	movq	0x8(%rax), %rax
0000000100003771	movq	%rax, -0x8(%rbp)
0000000100003775	jmp	0x100003786
000000010000377a	movq	-0x18(%rbp), %rax
000000010000377e	movq	0x10(%rax), %rax
0000000100003782	movq	%rax, -0x8(%rbp)
0000000100003786	movq	-0x8(%rbp), %rax
000000010000378a	popq	%rbp
000000010000378b	retq
000000010000378c	nopl	(%rax)
__ZN2ft3RBTIiNSt3__14lessIiEENS1_9allocatorINS_12RedBlackTreeIiEEEEE29deletion_balancing_recoloringEPPS6_ib:
0000000100003790	pushq	%rbp
0000000100003791	movq	%rsp, %rbp
0000000100003794	subq	$0x20, %rsp
0000000100003798	movq	%rdi, -0x8(%rbp)
000000010000379c	movq	%rsi, -0x10(%rbp)
00000001000037a0	movl	%edx, -0x14(%rbp)
00000001000037a3	andb	$0x1, %cl
00000001000037a6	movb	%cl, -0x15(%rbp)
00000001000037a9	movq	-0x8(%rbp), %rax
00000001000037ad	testb	$0x1, -0x15(%rbp)
00000001000037b1	movq	%rax, -0x20(%rbp)
00000001000037b5	je	0x1000039e1
00000001000037bb	cmpl	$0x3, -0x14(%rbp)
00000001000037bf	jne	0x1000038d3
00000001000037c5	movq	-0x10(%rbp), %rax
00000001000037c9	movq	(%rax), %rax
00000001000037cc	movq	0x10(%rax), %rax
00000001000037d0	cmpq	$0x0, 0x10(%rax)
00000001000037d5	je	0x100003849
00000001000037db	movq	-0x10(%rbp), %rax
00000001000037df	movq	(%rax), %rax
00000001000037e2	movq	0x10(%rax), %rax
00000001000037e6	movq	0x10(%rax), %rax
00000001000037ea	movb	0x24(%rax), %cl
00000001000037ed	andb	$0x1, %cl
00000001000037f0	movzbl	%cl, %edx
00000001000037f3	cmpl	$0x1, %edx
00000001000037f6	jne	0x100003849
00000001000037fc	xorl	%edx, %edx
00000001000037fe	movq	-0x10(%rbp), %rax
0000000100003802	movq	(%rax), %rax
0000000100003805	movb	0x24(%rax), %cl
0000000100003808	movq	-0x10(%rbp), %rax
000000010000380c	movq	(%rax), %rax
000000010000380f	movq	0x10(%rax), %rax
0000000100003813	andb	$0x1, %cl
0000000100003816	movb	%cl, 0x24(%rax)
0000000100003819	movq	-0x10(%rbp), %rax
000000010000381d	movq	(%rax), %rax
0000000100003820	movb	$0x0, 0x24(%rax)
0000000100003824	movq	-0x10(%rbp), %rax
0000000100003828	movq	(%rax), %rax
000000010000382b	movq	0x10(%rax), %rax
000000010000382f	movq	0x10(%rax), %rax
0000000100003833	movb	$0x0, 0x24(%rax)
0000000100003837	movq	-0x10(%rbp), %rsi
000000010000383b	movq	-0x20(%rbp), %rdi
000000010000383f	callq	0x100003adc
0000000100003844	jmp	0x100003ac4
0000000100003849	xorl	%edx, %edx
000000010000384b	movq	-0x10(%rbp), %rax
000000010000384f	movq	(%rax), %rax
0000000100003852	movq	0x10(%rax), %rax
0000000100003856	movb	$0x1, 0x24(%rax)
000000010000385a	movq	-0x10(%rbp), %rax
000000010000385e	movq	(%rax), %rax
0000000100003861	movq	0x10(%rax), %rax
0000000100003865	movq	0x8(%rax), %rax
0000000100003869	movb	$0x0, 0x24(%rax)
000000010000386d	movq	-0x10(%rbp), %rax
0000000100003871	movq	(%rax), %rax
0000000100003874	addq	$0x10, %rax
000000010000387a	movq	-0x20(%rbp), %rdi
000000010000387e	movq	%rax, %rsi
0000000100003881	callq	0x100003ae2
0000000100003886	xorl	%edx, %edx
0000000100003888	movq	-0x10(%rbp), %rax
000000010000388c	movq	(%rax), %rax
000000010000388f	movb	0x24(%rax), %cl
0000000100003892	movq	-0x10(%rbp), %rax
0000000100003896	movq	(%rax), %rax
0000000100003899	movq	0x10(%rax), %rax
000000010000389d	andb	$0x1, %cl
00000001000038a0	movb	%cl, 0x24(%rax)
00000001000038a3	movq	-0x10(%rbp), %rax
00000001000038a7	movq	(%rax), %rax
00000001000038aa	movb	$0x0, 0x24(%rax)
00000001000038ae	movq	-0x10(%rbp), %rax
00000001000038b2	movq	(%rax), %rax
00000001000038b5	movq	0x10(%rax), %rax
00000001000038b9	movq	0x10(%rax), %rax
00000001000038bd	movb	$0x0, 0x24(%rax)
00000001000038c1	movq	-0x10(%rbp), %rsi
00000001000038c5	movq	-0x20(%rbp), %rdi
00000001000038c9	callq	0x100003adc
00000001000038ce	jmp	0x100003ac4
00000001000038d3	movq	-0x10(%rbp), %rax
00000001000038d7	movq	(%rax), %rax
00000001000038da	movq	0x8(%rax), %rax
00000001000038de	cmpq	$0x0, 0x8(%rax)
00000001000038e3	je	0x100003957
00000001000038e9	movq	-0x10(%rbp), %rax
00000001000038ed	movq	(%rax), %rax
00000001000038f0	movq	0x8(%rax), %rax
00000001000038f4	movq	0x8(%rax), %rax
00000001000038f8	movb	0x24(%rax), %cl
00000001000038fb	andb	$0x1, %cl
00000001000038fe	movzbl	%cl, %edx
0000000100003901	cmpl	$0x1, %edx
0000000100003904	jne	0x100003957
000000010000390a	xorl	%edx, %edx
000000010000390c	movq	-0x10(%rbp), %rax
0000000100003910	movq	(%rax), %rax
0000000100003913	movb	0x24(%rax), %cl
0000000100003916	movq	-0x10(%rbp), %rax
000000010000391a	movq	(%rax), %rax
000000010000391d	movq	0x8(%rax), %rax
0000000100003921	andb	$0x1, %cl
0000000100003924	movb	%cl, 0x24(%rax)
0000000100003927	movq	-0x10(%rbp), %rax
000000010000392b	movq	(%rax), %rax
000000010000392e	movb	$0x0, 0x24(%rax)
0000000100003932	movq	-0x10(%rbp), %rax
0000000100003936	movq	(%rax), %rax
0000000100003939	movq	0x8(%rax), %rax
000000010000393d	movq	0x8(%rax), %rax
0000000100003941	movb	$0x0, 0x24(%rax)
0000000100003945	movq	-0x10(%rbp), %rsi
0000000100003949	movq	-0x20(%rbp), %rdi
000000010000394d	callq	0x100003ae2
0000000100003952	jmp	0x100003ac4
0000000100003957	xorl	%edx, %edx
0000000100003959	movq	-0x10(%rbp), %rax
000000010000395d	movq	(%rax), %rax
0000000100003960	movq	0x8(%rax), %rax
0000000100003964	movb	$0x1, 0x24(%rax)
0000000100003968	movq	-0x10(%rbp), %rax
000000010000396c	movq	(%rax), %rax
000000010000396f	movq	0x8(%rax), %rax
0000000100003973	movq	0x10(%rax), %rax
0000000100003977	movb	$0x0, 0x24(%rax)
000000010000397b	movq	-0x10(%rbp), %rax
000000010000397f	movq	(%rax), %rax
0000000100003982	addq	$0x8, %rax
0000000100003988	movq	-0x20(%rbp), %rdi
000000010000398c	movq	%rax, %rsi
000000010000398f	callq	0x100003adc
0000000100003994	xorl	%edx, %edx
0000000100003996	movq	-0x10(%rbp), %rax
000000010000399a	movq	(%rax), %rax
000000010000399d	movb	0x24(%rax), %cl
00000001000039a0	movq	-0x10(%rbp), %rax
00000001000039a4	movq	(%rax), %rax
00000001000039a7	movq	0x8(%rax), %rax
00000001000039ab	andb	$0x1, %cl
00000001000039ae	movb	%cl, 0x24(%rax)
00000001000039b1	movq	-0x10(%rbp), %rax
00000001000039b5	movq	(%rax), %rax
00000001000039b8	movb	$0x0, 0x24(%rax)
00000001000039bc	movq	-0x10(%rbp), %rax
00000001000039c0	movq	(%rax), %rax
00000001000039c3	movq	0x8(%rax), %rax
00000001000039c7	movq	0x8(%rax), %rax
00000001000039cb	movb	$0x0, 0x24(%rax)
00000001000039cf	movq	-0x10(%rbp), %rsi
00000001000039d3	movq	-0x20(%rbp), %rdi
00000001000039d7	callq	0x100003ae2
00000001000039dc	jmp	0x100003ac4
00000001000039e1	cmpl	$0x3, -0x14(%rbp)
00000001000039e5	jne	0x100003a5a
00000001000039eb	movq	-0x10(%rbp), %rax
00000001000039ef	movq	(%rax), %rax
00000001000039f2	movq	0x10(%rax), %rax
00000001000039f6	cmpq	$0x0, 0x10(%rax)
00000001000039fb	je	0x100003a15
0000000100003a01	xorl	%edx, %edx
0000000100003a03	movq	-0x10(%rbp), %rsi
0000000100003a07	movq	-0x20(%rbp), %rdi
0000000100003a0b	callq	0x100003adc
0000000100003a10	jmp	0x100003ac4
0000000100003a15	movq	-0x10(%rbp), %rax
0000000100003a19	movq	(%rax), %rax
0000000100003a1c	movq	0x10(%rax), %rax
0000000100003a20	cmpq	$0x0, 0x8(%rax)
0000000100003a25	je	0x100003a46
0000000100003a2b	xorl	%edx, %edx
0000000100003a2d	movq	-0x10(%rbp), %rax
0000000100003a31	movq	(%rax), %rax
0000000100003a34	addq	$0x10, %rax
0000000100003a3a	movq	-0x20(%rbp), %rdi
0000000100003a3e	movq	%rax, %rsi
0000000100003a41	callq	0x100003ae2
0000000100003a46	xorl	%edx, %edx
0000000100003a48	movq	-0x10(%rbp), %rsi
0000000100003a4c	movq	-0x20(%rbp), %rdi
0000000100003a50	callq	0x100003adc
0000000100003a55	jmp	0x100003ac4
0000000100003a5a	movq	-0x10(%rbp), %rax
0000000100003a5e	movq	(%rax), %rax
0000000100003a61	movq	0x8(%rax), %rax
0000000100003a65	cmpq	$0x0, 0x8(%rax)
0000000100003a6a	je	0x100003a84
0000000100003a70	xorl	%edx, %edx
0000000100003a72	movq	-0x10(%rbp), %rsi
0000000100003a76	movq	-0x20(%rbp), %rdi
0000000100003a7a	callq	0x100003ae2
0000000100003a7f	jmp	0x100003ac4
0000000100003a84	movq	-0x10(%rbp), %rax
0000000100003a88	movq	(%rax), %rax
0000000100003a8b	movq	0x8(%rax), %rax
0000000100003a8f	cmpq	$0x0, 0x10(%rax)
0000000100003a94	je	0x100003ab5
0000000100003a9a	xorl	%edx, %edx
0000000100003a9c	movq	-0x10(%rbp), %rax
0000000100003aa0	movq	(%rax), %rax
0000000100003aa3	addq	$0x8, %rax
0000000100003aa9	movq	-0x20(%rbp), %rdi
0000000100003aad	movq	%rax, %rsi
0000000100003ab0	callq	0x100003adc
0000000100003ab5	xorl	%edx, %edx
0000000100003ab7	movq	-0x10(%rbp), %rsi
0000000100003abb	movq	-0x20(%rbp), %rdi
0000000100003abf	callq	0x100003ae2
0000000100003ac4	addq	$0x20, %rsp
0000000100003ac8	popq	%rbp
0000000100003ac9	retq
